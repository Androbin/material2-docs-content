{"version":3,"file":"components-examples-cdk-text-field.umd.js","sources":["../../../../../src/components-examples/cdk/text-field/text-field-autofill-directive/text-field-autofill-directive-example.html","../../../../../src/components-examples/cdk/text-field/text-field-autofill-directive/text-field-autofill-directive-example.ts","../../../../../src/components-examples/cdk/text-field/text-field-autofill-monitor/text-field-autofill-monitor-example.html","../../../../../src/components-examples/cdk/text-field/text-field-autofill-monitor/text-field-autofill-monitor-example.ts","../../../../../src/components-examples/cdk/text-field/text-field-autosize-textarea/text-field-autosize-textarea-example.ts","../../../../../src/components-examples/cdk/text-field/text-field-autosize-textarea/text-field-autosize-textarea-example.html","../../../../../src/components-examples/cdk/text-field/index.ts","../../../../../src/components-examples/cdk/text-field/text-field_public_index.ts"],"sourcesContent":["<form (submit)=\"$event.preventDefault()\">\n  <mat-form-field appearance=\"fill\">\n    <mat-label>First name</mat-label>\n    <input matInput (cdkAutofill)=\"firstNameAutofilled = $event.isAutofilled\">\n    <mat-hint *ngIf=\"firstNameAutofilled\">Autofilled!</mat-hint>\n  </mat-form-field>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Last name</mat-label>\n    <input matInput (cdkAutofill)=\"lastNameAutofilled = $event.isAutofilled\">\n    <mat-hint *ngIf=\"lastNameAutofilled\">Autofilled!</mat-hint>\n  </mat-form-field>\n  <button mat-raised-button>Submit</button>\n</form>\n","import {Component} from '@angular/core';\n\n/** @title Monitoring autofill state with cdkAutofill */\n@Component({\n  selector: 'text-field-autofill-directive-example',\n  templateUrl: './text-field-autofill-directive-example.html',\n  styleUrls: ['./text-field-autofill-directive-example.css'],\n})\nexport class TextFieldAutofillDirectiveExample {\n  firstNameAutofilled: boolean;\n  lastNameAutofilled: boolean;\n}\n","<form (submit)=\"$event.preventDefault()\">\n  <mat-form-field appearance=\"fill\">\n    <mat-label>First name</mat-label>\n    <input matInput #first>\n    <mat-hint *ngIf=\"firstNameAutofilled\">Autofilled!</mat-hint>\n  </mat-form-field>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Last name</mat-label>\n    <input matInput #last>\n    <mat-hint *ngIf=\"lastNameAutofilled\">Autofilled!</mat-hint>\n  </mat-form-field>\n  <button mat-raised-button>Submit</button>\n</form>\n","import {AutofillMonitor} from '@angular/cdk/text-field';\nimport {AfterViewInit, Component, ElementRef, OnDestroy, ViewChild} from '@angular/core';\n\n/** @title Monitoring autofill state with AutofillMonitor */\n@Component({\n  selector: 'text-field-autofill-monitor-example',\n  templateUrl: './text-field-autofill-monitor-example.html',\n  styleUrls: ['./text-field-autofill-monitor-example.css'],\n})\nexport class TextFieldAutofillMonitorExample implements AfterViewInit, OnDestroy {\n  @ViewChild('first', {read: ElementRef}) firstName: ElementRef<HTMLElement>;\n  @ViewChild('last', {read: ElementRef}) lastName: ElementRef<HTMLElement>;\n  firstNameAutofilled: boolean;\n  lastNameAutofilled: boolean;\n\n  constructor(private _autofill: AutofillMonitor) {}\n\n  ngAfterViewInit() {\n    this._autofill.monitor(this.firstName)\n        .subscribe(e => this.firstNameAutofilled = e.isAutofilled);\n    this._autofill.monitor(this.lastName)\n        .subscribe(e => this.lastNameAutofilled = e.isAutofilled);\n  }\n\n  ngOnDestroy() {\n    this._autofill.stopMonitoring(this.firstName);\n    this._autofill.stopMonitoring(this.lastName);\n  }\n}\n","import {CdkTextareaAutosize} from '@angular/cdk/text-field';\nimport {Component, NgZone, ViewChild} from '@angular/core';\nimport {take} from 'rxjs/operators';\n\n/** @title Auto-resizing textarea */\n@Component({\n  selector: 'text-field-autosize-textarea-example',\n  templateUrl: './text-field-autosize-textarea-example.html',\n  styleUrls: ['./text-field-autosize-textarea-example.css'],\n})\nexport class TextFieldAutosizeTextareaExample {\n  constructor(private _ngZone: NgZone) {}\n\n  @ViewChild('autosize') autosize: CdkTextareaAutosize;\n\n  triggerResize() {\n    // Wait for changes to be applied, then trigger textarea resize.\n    this._ngZone.onStable.pipe(take(1))\n        .subscribe(() => this.autosize.resizeToFitContent(true));\n  }\n}\n","<mat-form-field appearance=\"fill\">\n  <mat-label>Font size</mat-label>\n  <mat-select #fontSize value=\"16px\" (selectionChange)=\"triggerResize()\">\n    <mat-option value=\"10px\">10px</mat-option>\n    <mat-option value=\"12px\">12px</mat-option>\n    <mat-option value=\"14px\">14px</mat-option>\n    <mat-option value=\"16px\">16px</mat-option>\n    <mat-option value=\"18px\">18px</mat-option>\n    <mat-option value=\"20px\">20px</mat-option>\n  </mat-select>\n</mat-form-field>\n\n<mat-form-field [style.fontSize]=\"fontSize.value\" appearance=\"fill\">\n  <mat-label>Autosize textarea</mat-label>\n  <textarea matInput\n            cdkTextareaAutosize\n            #autosize=\"cdkTextareaAutosize\"\n            cdkAutosizeMinRows=\"1\"\n            cdkAutosizeMaxRows=\"5\"></textarea>\n</mat-form-field>\n","import {TextFieldModule} from '@angular/cdk/text-field';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material/select';\nimport {\n  TextFieldAutofillDirectiveExample\n} from './text-field-autofill-directive/text-field-autofill-directive-example';\nimport {\n  TextFieldAutofillMonitorExample\n} from './text-field-autofill-monitor/text-field-autofill-monitor-example';\nimport {\n  TextFieldAutosizeTextareaExample\n} from './text-field-autosize-textarea/text-field-autosize-textarea-example';\n\nexport {\n  TextFieldAutofillDirectiveExample,\n  TextFieldAutofillMonitorExample,\n  TextFieldAutosizeTextareaExample,\n};\n\nconst EXAMPLES = [\n  TextFieldAutofillDirectiveExample,\n  TextFieldAutofillMonitorExample,\n  TextFieldAutosizeTextareaExample,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TextFieldModule,\n    MatButtonModule,\n    MatInputModule,\n    MatSelectModule,\n  ],\n  declarations: EXAMPLES,\n  exports: EXAMPLES,\n  entryComponents: EXAMPLES,\n})\nexport class CdkTextFieldExamplesModule {\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i0","Component","ElementRef","ViewChild","take","CommonModule","TextFieldModule","MatButtonModule","MatInputModule","MatSelectModule","NgModule"],"mappings":"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"}