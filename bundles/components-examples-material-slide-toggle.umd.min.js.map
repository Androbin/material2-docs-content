{"version":3,"sources":["src/components-examples/components-examples-material-slide-toggle.umd.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","ng","componentsExamples","material","slideToggle","core","forms","button","card","checkbox","radio","this","i0","i1$1","i3","i1","i4","i2","i2$1","_interopNamespace","e","__esModule","n","Object","create","keys","forEach","k","d","getOwnPropertyDescriptor","defineProperty","get","enumerable","freeze","SlideToggleConfigurableExample","i0__namespace","i1__namespace$1","i3__namespace","i1__namespace","i4__namespace","i2__namespace","i2__namespace$1","color","checked","disabled","ɵfac","SlideToggleConfigurableExample_Factory","t","ɵcmp","ɵɵdefineComponent","type","selectors","decls","vars","consts","template","SlideToggleConfigurableExample_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","SlideToggleConfigurableExample_Template_mat_radio_group_ngModelChange_7_listener","$event","SlideToggleConfigurableExample_Template_mat_checkbox_ngModelChange_15_listener","SlideToggleConfigurableExample_Template_mat_checkbox_ngModelChange_18_listener","ɵɵadvance","ɵɵproperty","directives","MatCard","MatCardContent","MatRadioGroup","NgControlStatus","NgModel","MatRadioButton","MatCheckbox","MatSlideToggle","styles","SlideToggleOverviewExample","SlideToggleHarnessExample","SlideToggleExamplesModule","SlideToggleFormsExample","formBuilder","isChecked","formGroup","group","enableWifi","acceptTerms","Validators","requiredTrue","prototype","onFormSubmit","alert","JSON","stringify","value","SlideToggleFormsExample_Factory","ɵɵdirectiveInject","FormBuilder","SlideToggleFormsExample_Template","SlideToggleFormsExample_Template_mat_slide_toggle_ngModelChange_2_listener","SlideToggleFormsExample_Template_form_ngSubmit_6_listener","SlideToggleFormsExample_Template_form_ngSubmit_16_listener","ɵɵtextInterpolate1","status","NgControlStatusGroup","NgForm","MatSlideToggleRequiredValidator","RequiredValidator","MatButton","FormGroupDirective","FormControlName","SlideToggleOverviewExample_Factory","SlideToggleOverviewExample_Template","encapsulation","ctrl","FormControl","SlideToggleHarnessExample_Factory","SlideToggleHarnessExample_Template","FormControlDirective","SlideToggleExamplesModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","FormsModule","MatButtonModule","MatCardModule","MatCheckboxModule","MatRadioModule","MatSlideToggleModule","ReactiveFormsModule","ngJitMode","ɵɵsetNgModuleScope","declarations"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/forms'), require('@angular/material/button'), require('@angular/material/card'), require('@angular/material/checkbox'), require('@angular/material/radio'), require('@angular/material/slide-toggle')) :\n    typeof define === 'function' && define.amd ? define('@angular/components-examples/material/slide-toggle', ['exports', '@angular/core', '@angular/forms', '@angular/material/button', '@angular/material/card', '@angular/material/checkbox', '@angular/material/radio', '@angular/material/slide-toggle'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.ng = global.ng || {}, global.ng.componentsExamples = global.ng.componentsExamples || {}, global.ng.componentsExamples.material = global.ng.componentsExamples.material || {}, global.ng.componentsExamples.material.slideToggle = {}), global.ng.core, global.ng.forms, global.ng.material.button, global.ng.material.card, global.ng.material.checkbox, global.ng.material.radio, global.ng.material.slideToggle));\n}(this, (function (exports, i0, i1$1, i3, i1, i4, i2, i2$1) { 'use strict';\n\n    function _interopNamespace(e) {\n        if (e && e.__esModule) return e;\n        var n = Object.create(null);\n        if (e) {\n            Object.keys(e).forEach(function (k) {\n                if (k !== 'default') {\n                    var d = Object.getOwnPropertyDescriptor(e, k);\n                    Object.defineProperty(n, k, d.get ? d : {\n                        enumerable: true,\n                        get: function () {\n                            return e[k];\n                        }\n                    });\n                }\n            });\n        }\n        n['default'] = e;\n        return Object.freeze(n);\n    }\n\n    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);\n    var i1__namespace$1 = /*#__PURE__*/_interopNamespace(i1$1);\n    var i3__namespace = /*#__PURE__*/_interopNamespace(i3);\n    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);\n    var i4__namespace = /*#__PURE__*/_interopNamespace(i4);\n    var i2__namespace = /*#__PURE__*/_interopNamespace(i2);\n    var i2__namespace$1 = /*#__PURE__*/_interopNamespace(i2$1);\n\n    /**\n     * @title Configurable slide-toggle\n     */\n    var SlideToggleConfigurableExample = /** @class */ (function () {\n        function SlideToggleConfigurableExample() {\n            this.color = 'accent';\n            this.checked = false;\n            this.disabled = false;\n        }\n        return SlideToggleConfigurableExample;\n    }());\n    SlideToggleConfigurableExample.ɵfac = function SlideToggleConfigurableExample_Factory(t) { return new (t || SlideToggleConfigurableExample)(); };\n    SlideToggleConfigurableExample.ɵcmp = /*@__PURE__*/ i0__namespace.ɵɵdefineComponent({ type: SlideToggleConfigurableExample, selectors: [[\"slide-toggle-configurable-example\"]], decls: 27, vars: 6, consts: [[1, \"example-h2\"], [1, \"example-section\"], [1, \"example-margin\"], [3, \"ngModel\", \"ngModelChange\"], [\"value\", \"primary\", 1, \"example-margin\"], [\"value\", \"accent\", 1, \"example-margin\"], [\"value\", \"warn\", 1, \"example-margin\"], [1, \"example-margin\", 3, \"ngModel\", \"ngModelChange\"], [1, \"result\"], [1, \"example-margin\", 3, \"color\", \"checked\", \"disabled\"]], template: function SlideToggleConfigurableExample_Template(rf, ctx) {\n            if (rf & 1) {\n                i0__namespace.ɵɵelementStart(0, \"mat-card\");\n                i0__namespace.ɵɵelementStart(1, \"mat-card-content\");\n                i0__namespace.ɵɵelementStart(2, \"h2\", 0);\n                i0__namespace.ɵɵtext(3, \"Slider configuration\");\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelementStart(4, \"section\", 1);\n                i0__namespace.ɵɵelementStart(5, \"label\", 2);\n                i0__namespace.ɵɵtext(6, \"Color:\");\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelementStart(7, \"mat-radio-group\", 3);\n                i0__namespace.ɵɵlistener(\"ngModelChange\", function SlideToggleConfigurableExample_Template_mat_radio_group_ngModelChange_7_listener($event) { return ctx.color = $event; });\n                i0__namespace.ɵɵelementStart(8, \"mat-radio-button\", 4);\n                i0__namespace.ɵɵtext(9, \" Primary \");\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelementStart(10, \"mat-radio-button\", 5);\n                i0__namespace.ɵɵtext(11, \" Accent \");\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelementStart(12, \"mat-radio-button\", 6);\n                i0__namespace.ɵɵtext(13, \" Warn \");\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelementStart(14, \"section\", 1);\n                i0__namespace.ɵɵelementStart(15, \"mat-checkbox\", 7);\n                i0__namespace.ɵɵlistener(\"ngModelChange\", function SlideToggleConfigurableExample_Template_mat_checkbox_ngModelChange_15_listener($event) { return ctx.checked = $event; });\n                i0__namespace.ɵɵtext(16, \"Checked\");\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelementStart(17, \"section\", 1);\n                i0__namespace.ɵɵelementStart(18, \"mat-checkbox\", 7);\n                i0__namespace.ɵɵlistener(\"ngModelChange\", function SlideToggleConfigurableExample_Template_mat_checkbox_ngModelChange_18_listener($event) { return ctx.disabled = $event; });\n                i0__namespace.ɵɵtext(19, \"Disabled\");\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelementStart(20, \"mat-card\", 8);\n                i0__namespace.ɵɵelementStart(21, \"mat-card-content\");\n                i0__namespace.ɵɵelementStart(22, \"h2\", 0);\n                i0__namespace.ɵɵtext(23, \"Result\");\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelementStart(24, \"section\", 1);\n                i0__namespace.ɵɵelementStart(25, \"mat-slide-toggle\", 9);\n                i0__namespace.ɵɵtext(26, \" Slide me! \");\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelementEnd();\n            }\n            if (rf & 2) {\n                i0__namespace.ɵɵadvance(7);\n                i0__namespace.ɵɵproperty(\"ngModel\", ctx.color);\n                i0__namespace.ɵɵadvance(8);\n                i0__namespace.ɵɵproperty(\"ngModel\", ctx.checked);\n                i0__namespace.ɵɵadvance(3);\n                i0__namespace.ɵɵproperty(\"ngModel\", ctx.disabled);\n                i0__namespace.ɵɵadvance(7);\n                i0__namespace.ɵɵproperty(\"color\", ctx.color)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled);\n            }\n        }, directives: [i1__namespace.MatCard, i1__namespace.MatCardContent, i2__namespace.MatRadioGroup, i1__namespace$1.NgControlStatus, i1__namespace$1.NgModel, i2__namespace.MatRadioButton, i4__namespace.MatCheckbox, i2__namespace$1.MatSlideToggle], styles: [\".example-h2[_ngcontent-%COMP%] {\\n  margin: 10px;\\n}\\n\\n.example-section[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-content: center;\\n  align-items: center;\\n  height: 60px;\\n}\\n\\n.example-margin[_ngcontent-%COMP%] {\\n  margin: 10px;\\n}\"] });\n    (function () {\n        (typeof ngDevMode === \"undefined\" || ngDevMode) && i0__namespace.ɵsetClassMetadata(SlideToggleConfigurableExample, [{\n                type: i0.Component,\n                args: [{\n                        selector: 'slide-toggle-configurable-example',\n                        templateUrl: 'slide-toggle-configurable-example.html',\n                        styleUrls: ['slide-toggle-configurable-example.css'],\n                    }]\n            }], null, null);\n    })();\n\n    /**\n     * @title Slide-toggle with forms\n     */\n    var SlideToggleFormsExample = /** @class */ (function () {\n        function SlideToggleFormsExample(formBuilder) {\n            this.isChecked = true;\n            this.formGroup = formBuilder.group({\n                enableWifi: '',\n                acceptTerms: ['', i1$1.Validators.requiredTrue]\n            });\n        }\n        SlideToggleFormsExample.prototype.onFormSubmit = function () {\n            alert(JSON.stringify(this.formGroup.value, null, 2));\n        };\n        return SlideToggleFormsExample;\n    }());\n    SlideToggleFormsExample.ɵfac = function SlideToggleFormsExample_Factory(t) { return new (t || SlideToggleFormsExample)(i0__namespace.ɵɵdirectiveInject(i1__namespace$1.FormBuilder)); };\n    SlideToggleFormsExample.ɵcmp = /*@__PURE__*/ i0__namespace.ɵɵdefineComponent({ type: SlideToggleFormsExample, selectors: [[\"slide-toggle-forms-example\"]], decls: 25, vars: 4, consts: [[3, \"ngModel\", \"ngModelChange\"], [\"ngNativeValidate\", \"\", 1, \"example-form\", 3, \"ngSubmit\"], [\"form\", \"ngForm\"], [\"ngModel\", \"\", \"name\", \"enableWifi\"], [\"ngModel\", \"\", \"name\", \"acceptTerms\", \"required\", \"\"], [\"mat-raised-button\", \"\", \"type\", \"submit\"], [\"ngNativeValidate\", \"\", 1, \"example-form\", 3, \"formGroup\", \"ngSubmit\"], [\"formControlName\", \"enableWifi\"], [\"formControlName\", \"acceptTerms\"]], template: function SlideToggleFormsExample_Template(rf, ctx) {\n            if (rf & 1) {\n                i0__namespace.ɵɵelementStart(0, \"p\");\n                i0__namespace.ɵɵtext(1, \"Slide Toggle using a simple NgModel.\");\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelementStart(2, \"mat-slide-toggle\", 0);\n                i0__namespace.ɵɵlistener(\"ngModelChange\", function SlideToggleFormsExample_Template_mat_slide_toggle_ngModelChange_2_listener($event) { return ctx.isChecked = $event; });\n                i0__namespace.ɵɵtext(3);\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelementStart(4, \"p\");\n                i0__namespace.ɵɵtext(5, \"Slide Toggle inside of a Template-driven form\");\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelementStart(6, \"form\", 1, 2);\n                i0__namespace.ɵɵlistener(\"ngSubmit\", function SlideToggleFormsExample_Template_form_ngSubmit_6_listener() { return ctx.onFormSubmit(); });\n                i0__namespace.ɵɵelementStart(8, \"mat-slide-toggle\", 3);\n                i0__namespace.ɵɵtext(9, \"Enable Wifi\");\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelementStart(10, \"mat-slide-toggle\", 4);\n                i0__namespace.ɵɵtext(11, \"Accept Terms of Service\");\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelementStart(12, \"button\", 5);\n                i0__namespace.ɵɵtext(13, \"Save Settings\");\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelementStart(14, \"p\");\n                i0__namespace.ɵɵtext(15, \"Slide Toggle inside of a Reactive form\");\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelementStart(16, \"form\", 6);\n                i0__namespace.ɵɵlistener(\"ngSubmit\", function SlideToggleFormsExample_Template_form_ngSubmit_16_listener() { return ctx.onFormSubmit(); });\n                i0__namespace.ɵɵelementStart(17, \"mat-slide-toggle\", 7);\n                i0__namespace.ɵɵtext(18, \"Enable Wifi\");\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelementStart(19, \"mat-slide-toggle\", 8);\n                i0__namespace.ɵɵtext(20, \"Accept Terms of Service\");\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelementStart(21, \"p\");\n                i0__namespace.ɵɵtext(22);\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelementStart(23, \"button\", 5);\n                i0__namespace.ɵɵtext(24, \"Save Settings\");\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelementEnd();\n            }\n            if (rf & 2) {\n                i0__namespace.ɵɵadvance(2);\n                i0__namespace.ɵɵproperty(\"ngModel\", ctx.isChecked);\n                i0__namespace.ɵɵadvance(1);\n                i0__namespace.ɵɵtextInterpolate1(\"Slide Toggle Checked: \", ctx.isChecked, \"\");\n                i0__namespace.ɵɵadvance(13);\n                i0__namespace.ɵɵproperty(\"formGroup\", ctx.formGroup);\n                i0__namespace.ɵɵadvance(6);\n                i0__namespace.ɵɵtextInterpolate1(\"Form Group Status: \", ctx.formGroup.status, \"\");\n            }\n        }, directives: [i2__namespace$1.MatSlideToggle, i1__namespace$1.NgControlStatus, i1__namespace$1.NgModel, i1__namespace$1.NgControlStatusGroup, i1__namespace$1.NgForm, i2__namespace$1.MatSlideToggleRequiredValidator, i1__namespace$1.RequiredValidator, i3__namespace.MatButton, i1__namespace$1.FormGroupDirective, i1__namespace$1.FormControlName], styles: [\".example-form[_ngcontent-%COMP%]   mat-slide-toggle[_ngcontent-%COMP%] {\\n  margin: 8px 0;\\n  display: block;\\n}\"] });\n    (function () {\n        (typeof ngDevMode === \"undefined\" || ngDevMode) && i0__namespace.ɵsetClassMetadata(SlideToggleFormsExample, [{\n                type: i0.Component,\n                args: [{\n                        selector: 'slide-toggle-forms-example',\n                        templateUrl: './slide-toggle-forms-example.html',\n                        styleUrls: ['./slide-toggle-forms-example.css'],\n                    }]\n            }], function () { return [{ type: i1__namespace$1.FormBuilder }]; }, null);\n    })();\n\n    /**\n     * @title Basic slide-toggles\n     */\n    var SlideToggleOverviewExample = /** @class */ (function () {\n        function SlideToggleOverviewExample() {\n        }\n        return SlideToggleOverviewExample;\n    }());\n    SlideToggleOverviewExample.ɵfac = function SlideToggleOverviewExample_Factory(t) { return new (t || SlideToggleOverviewExample)(); };\n    SlideToggleOverviewExample.ɵcmp = /*@__PURE__*/ i0__namespace.ɵɵdefineComponent({ type: SlideToggleOverviewExample, selectors: [[\"slide-toggle-overview-example\"]], decls: 2, vars: 0, template: function SlideToggleOverviewExample_Template(rf, ctx) {\n            if (rf & 1) {\n                i0__namespace.ɵɵelementStart(0, \"mat-slide-toggle\");\n                i0__namespace.ɵɵtext(1, \"Slide me!\");\n                i0__namespace.ɵɵelementEnd();\n            }\n        }, directives: [i2__namespace$1.MatSlideToggle], encapsulation: 2 });\n    (function () {\n        (typeof ngDevMode === \"undefined\" || ngDevMode) && i0__namespace.ɵsetClassMetadata(SlideToggleOverviewExample, [{\n                type: i0.Component,\n                args: [{\n                        selector: 'slide-toggle-overview-example',\n                        templateUrl: 'slide-toggle-overview-example.html',\n                    }]\n            }], null, null);\n    })();\n\n    /**\n     * @title Testing with MatSlideToggleHarness\n     */\n    var SlideToggleHarnessExample = /** @class */ (function () {\n        function SlideToggleHarnessExample() {\n            this.disabled = true;\n            this.ctrl = new i1$1.FormControl(true);\n        }\n        return SlideToggleHarnessExample;\n    }());\n    SlideToggleHarnessExample.ɵfac = function SlideToggleHarnessExample_Factory(t) { return new (t || SlideToggleHarnessExample)(); };\n    SlideToggleHarnessExample.ɵcmp = /*@__PURE__*/ i0__namespace.ɵɵdefineComponent({ type: SlideToggleHarnessExample, selectors: [[\"slide-toggle-harness-example\"]], decls: 4, vars: 2, consts: [[\"name\", \"first-name\", 3, \"formControl\"], [3, \"disabled\"]], template: function SlideToggleHarnessExample_Template(rf, ctx) {\n            if (rf & 1) {\n                i0__namespace.ɵɵelementStart(0, \"mat-slide-toggle\", 0);\n                i0__namespace.ɵɵtext(1, \" First\\n\");\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelementStart(2, \"mat-slide-toggle\", 1);\n                i0__namespace.ɵɵtext(3, \" Second\\n\");\n                i0__namespace.ɵɵelementEnd();\n            }\n            if (rf & 2) {\n                i0__namespace.ɵɵproperty(\"formControl\", ctx.ctrl);\n                i0__namespace.ɵɵadvance(2);\n                i0__namespace.ɵɵproperty(\"disabled\", ctx.disabled);\n            }\n        }, directives: [i2__namespace$1.MatSlideToggle, i1__namespace$1.NgControlStatus, i1__namespace$1.FormControlDirective], encapsulation: 2 });\n    (function () {\n        (typeof ngDevMode === \"undefined\" || ngDevMode) && i0__namespace.ɵsetClassMetadata(SlideToggleHarnessExample, [{\n                type: i0.Component,\n                args: [{\n                        selector: 'slide-toggle-harness-example',\n                        templateUrl: 'slide-toggle-harness-example.html',\n                    }]\n            }], null, null);\n    })();\n\n    var EXAMPLES = [\n        SlideToggleConfigurableExample,\n        SlideToggleFormsExample,\n        SlideToggleHarnessExample,\n        SlideToggleOverviewExample,\n    ];\n    var SlideToggleExamplesModule = /** @class */ (function () {\n        function SlideToggleExamplesModule() {\n        }\n        return SlideToggleExamplesModule;\n    }());\n    SlideToggleExamplesModule.ɵfac = function SlideToggleExamplesModule_Factory(t) { return new (t || SlideToggleExamplesModule)(); };\n    SlideToggleExamplesModule.ɵmod = /*@__PURE__*/ i0__namespace.ɵɵdefineNgModule({ type: SlideToggleExamplesModule });\n    SlideToggleExamplesModule.ɵinj = /*@__PURE__*/ i0__namespace.ɵɵdefineInjector({ imports: [[\n                i1$1.FormsModule,\n                i3.MatButtonModule,\n                i1.MatCardModule,\n                i4.MatCheckboxModule,\n                i2.MatRadioModule,\n                i2$1.MatSlideToggleModule,\n                i1$1.ReactiveFormsModule,\n            ]] });\n    (function () {\n        (typeof ngDevMode === \"undefined\" || ngDevMode) && i0__namespace.ɵsetClassMetadata(SlideToggleExamplesModule, [{\n                type: i0.NgModule,\n                args: [{\n                        imports: [\n                            i1$1.FormsModule,\n                            i3.MatButtonModule,\n                            i1.MatCardModule,\n                            i4.MatCheckboxModule,\n                            i2.MatRadioModule,\n                            i2$1.MatSlideToggleModule,\n                            i1$1.ReactiveFormsModule,\n                        ],\n                        declarations: EXAMPLES,\n                        exports: EXAMPLES,\n                        entryComponents: EXAMPLES,\n                    }]\n            }], null, null);\n    })();\n    (function () {\n        (typeof ngJitMode === \"undefined\" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(SlideToggleExamplesModule, { declarations: [SlideToggleConfigurableExample,\n                SlideToggleFormsExample,\n                SlideToggleHarnessExample,\n                SlideToggleOverviewExample], imports: [i1$1.FormsModule,\n                i3.MatButtonModule,\n                i1.MatCardModule,\n                i4.MatCheckboxModule,\n                i2.MatRadioModule,\n                i2$1.MatSlideToggleModule,\n                i1$1.ReactiveFormsModule], exports: [SlideToggleConfigurableExample,\n                SlideToggleFormsExample,\n                SlideToggleHarnessExample,\n                SlideToggleOverviewExample] });\n    })();\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.SlideToggleConfigurableExample = SlideToggleConfigurableExample;\n    exports.SlideToggleExamplesModule = SlideToggleExamplesModule;\n    exports.SlideToggleFormsExample = SlideToggleFormsExample;\n    exports.SlideToggleHarnessExample = SlideToggleHarnessExample;\n    exports.SlideToggleOverviewExample = SlideToggleOverviewExample;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=components-examples-material-slide-toggle.umd.js.map\n"]}