{"version":3,"file":"components-examples-material-checkbox.umd.js","sources":["../../../../../src/components-examples/material/checkbox/checkbox-configurable/checkbox-configurable-example.ts","../../../../../src/components-examples/material/checkbox/checkbox-configurable/checkbox-configurable-example.html","../../../../../src/components-examples/material/checkbox/checkbox-harness/checkbox-harness-example.ts","../../../../../src/components-examples/material/checkbox/checkbox-harness/checkbox-harness-example.html","../../../../../src/components-examples/material/checkbox/checkbox-overview/checkbox-overview-example.html","../../../../../src/components-examples/material/checkbox/checkbox-overview/checkbox-overview-example.ts","../../../../../src/components-examples/material/checkbox/checkbox-reactive-forms/checkbox-reactive-forms-example.ts","../../../../../src/components-examples/material/checkbox/checkbox-reactive-forms/checkbox-reactive-forms-example.html","../../../../../src/components-examples/material/checkbox/index.ts","../../../../../src/components-examples/material/checkbox/checkbox_public_index.ts"],"sourcesContent":["import {Component} from '@angular/core';\n\n/**\n * @title Configurable checkbox\n */\n@Component({\n  selector: 'checkbox-configurable-example',\n  templateUrl: 'checkbox-configurable-example.html',\n  styleUrls: ['checkbox-configurable-example.css'],\n})\nexport class CheckboxConfigurableExample {\n  checked = false;\n  indeterminate = false;\n  labelPosition: 'before' | 'after' = 'after';\n  disabled = false;\n}\n","<mat-card>\n  <mat-card-content>\n    <h2 class=\"example-h2\">Checkbox configuration</h2>\n\n    <section class=\"example-section\">\n      <mat-checkbox class=\"example-margin\" [(ngModel)]=\"checked\">Checked</mat-checkbox>\n      <mat-checkbox class=\"example-margin\" [(ngModel)]=\"indeterminate\">Indeterminate</mat-checkbox>\n    </section>\n\n    <section class=\"example-section\">\n      <label class=\"example-margin\">Align:</label>\n      <mat-radio-group [(ngModel)]=\"labelPosition\">\n        <mat-radio-button class=\"example-margin\" value=\"after\">After</mat-radio-button>\n        <mat-radio-button class=\"example-margin\" value=\"before\">Before</mat-radio-button>\n      </mat-radio-group>\n    </section>\n\n    <section class=\"example-section\">\n      <mat-checkbox class=\"example-margin\" [(ngModel)]=\"disabled\">Disabled</mat-checkbox>\n    </section>\n  </mat-card-content>\n</mat-card>\n\n<mat-card class=\"result\">\n  <mat-card-content>\n    <h2 class=\"example-h2\">Result</h2>\n\n    <section class=\"example-section\">\n      <mat-checkbox\n          class=\"example-margin\"\n          [(ngModel)]=\"checked\"\n          [(indeterminate)]=\"indeterminate\"\n          [labelPosition]=\"labelPosition\"\n          [disabled]=\"disabled\">\n        I'm a checkbox\n      </mat-checkbox>\n    </section>\n  </mat-card-content>\n</mat-card>\n","import {Component} from '@angular/core';\n\n/**\n * @title Testing with MatCheckboxHarness\n */\n@Component({\n  selector: 'checkbox-harness-example',\n  templateUrl: 'checkbox-harness-example.html',\n})\nexport class CheckboxHarnessExample {\n  disabled = true;\n}\n","<mat-checkbox\n    required\n    [checked]=\"true\"\n    name=\"first-name\"\n    value=\"first-value\"\n    aria-label=\"First checkbox\">\n  First\n</mat-checkbox>\n<mat-checkbox indeterminate=\"true\" [disabled]=\"disabled\" aria-label=\"Second checkbox\">\n  Second\n</mat-checkbox>\n","<section class=\"example-section\">\n  <mat-checkbox class=\"example-margin\">Check me!</mat-checkbox>\n  <mat-checkbox class=\"example-margin\" [disabled]=\"true\">Disabled</mat-checkbox>\n</section>\n\n<section class=\"example-section\">\n  <span class=\"example-list-section\">\n    <mat-checkbox class=\"example-margin\"\n                  [checked]=\"allComplete\"\n                  [color]=\"task.color\"\n                  [indeterminate]=\"someComplete()\"\n                  (change)=\"setAll($event.checked)\">\n      {{task.name}}\n    </mat-checkbox>\n  </span>\n  <span class=\"example-list-section\">\n    <ul>\n      <li *ngFor=\"let subtask of task.subtasks\">\n        <mat-checkbox [(ngModel)]=\"subtask.completed\"\n                      [color]=\"subtask.color\"\n                      (ngModelChange)=\"updateAllComplete()\">\n          {{subtask.name}}\n        </mat-checkbox>\n      </li>\n    </ul>\n  </span>\n</section>\n","import {Component} from '@angular/core';\nimport {ThemePalette} from '@angular/material/core';\n\nexport interface Task {\n  name: string;\n  completed: boolean;\n  color: ThemePalette;\n  subtasks?: Task[];\n}\n\n/**\n * @title Basic checkboxes\n */\n@Component({\n  selector: 'checkbox-overview-example',\n  templateUrl: 'checkbox-overview-example.html',\n  styleUrls: ['checkbox-overview-example.css'],\n})\nexport class CheckboxOverviewExample {\n  task: Task = {\n    name: 'Indeterminate',\n    completed: false,\n    color: 'primary',\n    subtasks: [\n      {name: 'Primary', completed: false, color: 'primary'},\n      {name: 'Accent', completed: false, color: 'accent'},\n      {name: 'Warn', completed: false, color: 'warn'}\n    ]\n  };\n\n  allComplete: boolean = false;\n\n  updateAllComplete() {\n    this.allComplete = this.task.subtasks != null && this.task.subtasks.every(t => t.completed);\n  }\n\n  someComplete(): boolean {\n    if (this.task.subtasks == null) {\n      return false;\n    }\n    return this.task.subtasks.filter(t => t.completed).length > 0 && !this.allComplete;\n  }\n\n  setAll(completed: boolean) {\n    this.allComplete = completed;\n    if (this.task.subtasks == null) {\n      return;\n    }\n    this.task.subtasks.forEach(t => t.completed = completed);\n  }\n}\n","import {Component} from '@angular/core';\nimport {FormBuilder, FormGroup} from '@angular/forms';\n\n/** @title Checkboxes with reactive forms */\n@Component({\n  selector: 'checkbox-reactive-forms-example',\n  templateUrl: 'checkbox-reactive-forms-example.html',\n  styleUrls: ['checkbox-reactive-forms-example.css']\n})\nexport class CheckboxReactiveFormsExample {\n  toppings: FormGroup;\n\n  constructor(fb: FormBuilder) {\n    this.toppings = fb.group({\n      pepperoni: false,\n      extracheese: false,\n      mushroom: false\n    });\n  }\n}\n","<section class=\"example-section\" [formGroup]=\"toppings\">\n  <h4>Select your toppings:</h4>\n  <p><mat-checkbox formControlName=\"pepperoni\">Pepperoni</mat-checkbox></p>\n  <p><mat-checkbox formControlName=\"extracheese\">Extra Cheese</mat-checkbox></p>\n  <p><mat-checkbox formControlName=\"mushroom\">Mushroom</mat-checkbox></p>\n</section>\n\n<section class=\"example-section\" [formGroup]=\"toppings\">\n  <h4>You chose:</h4>\n  {{toppings.value | json}}\n</section>\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {CheckboxConfigurableExample} from './checkbox-configurable/checkbox-configurable-example';\nimport {CheckboxHarnessExample} from './checkbox-harness/checkbox-harness-example';\nimport {CheckboxOverviewExample} from './checkbox-overview/checkbox-overview-example';\nimport {\n  CheckboxReactiveFormsExample\n} from './checkbox-reactive-forms/checkbox-reactive-forms-example';\n\nexport {\n  CheckboxConfigurableExample,\n  CheckboxOverviewExample,\n  CheckboxHarnessExample,\n  CheckboxReactiveFormsExample,\n};\n\nconst EXAMPLES = [\n  CheckboxConfigurableExample,\n  CheckboxOverviewExample,\n  CheckboxHarnessExample,\n  CheckboxReactiveFormsExample,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatRadioModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  declarations: EXAMPLES,\n  exports: EXAMPLES,\n  entryComponents: EXAMPLES,\n})\nexport class CheckboxExamplesModule {\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i0","Component","CommonModule","MatCardModule","MatCheckboxModule","MatRadioModule","FormsModule","ReactiveFormsModule","NgModule"],"mappings":"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"}