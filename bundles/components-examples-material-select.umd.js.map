{"version":3,"file":"components-examples-material-select.umd.js","sources":["../../../../../src/components-examples/material/select/select-custom-trigger/select-custom-trigger-example.html","../../../../../src/components-examples/material/select/select-custom-trigger/select-custom-trigger-example.ts","../../../../../src/components-examples/material/select/select-disabled/select-disabled-example.ts","../../../../../src/components-examples/material/select/select-disabled/select-disabled-example.html","../../../../../src/components-examples/material/select/select-error-state-matcher/select-error-state-matcher-example.html","../../../../../src/components-examples/material/select/select-error-state-matcher/select-error-state-matcher-example.ts","../../../../../src/components-examples/material/select/select-form/select-form-example.html","../../../../../src/components-examples/material/select/select-form/select-form-example.ts","../../../../../src/components-examples/material/select/select-hint-error/select-hint-error-example.html","../../../../../src/components-examples/material/select/select-hint-error/select-hint-error-example.ts","../../../../../src/components-examples/material/select/select-multiple/select-multiple-example.html","../../../../../src/components-examples/material/select/select-multiple/select-multiple-example.ts","../../../../../src/components-examples/material/select/select-no-ripple/select-no-ripple-example.ts","../../../../../src/components-examples/material/select/select-no-ripple/select-no-ripple-example.html","../../../../../src/components-examples/material/select/select-optgroup/select-optgroup-example.html","../../../../../src/components-examples/material/select/select-optgroup/select-optgroup-example.ts","../../../../../src/components-examples/material/select/select-overview/select-overview-example.html","../../../../../src/components-examples/material/select/select-overview/select-overview-example.ts","../../../../../src/components-examples/material/select/select-panel-class/select-panel-class-example.ts","../../../../../src/components-examples/material/select/select-panel-class/select-panel-class-example.html","../../../../../src/components-examples/material/select/select-reset/select-reset-example.html","../../../../../src/components-examples/material/select/select-reset/select-reset-example.ts","../../../../../src/components-examples/material/select/select-value-binding/select-value-binding-example.ts","../../../../../src/components-examples/material/select/select-value-binding/select-value-binding-example.html","../../../../../src/components-examples/material/select/select-reactive-form/select-reactive-form-example.html","../../../../../src/components-examples/material/select/select-reactive-form/select-reactive-form-example.ts","../../../../../src/components-examples/material/select/select-initial-value/select-initial-value-example.html","../../../../../src/components-examples/material/select/select-initial-value/select-initial-value-example.ts","../../../../../src/components-examples/material/select/select-harness/select-harness-example.html","../../../../../src/components-examples/material/select/select-harness/select-harness-example.ts","../../../../../src/components-examples/material/select/index.ts","../../../../../src/components-examples/material/select/select_public_index.ts"],"sourcesContent":["<mat-form-field appearance=\"fill\">\n  <mat-label>Toppings</mat-label>\n  <mat-select [formControl]=\"toppings\" multiple>\n    <mat-select-trigger>\n      {{toppings.value ? toppings.value[0] : ''}}\n      <span *ngIf=\"toppings.value?.length > 1\" class=\"example-additional-selection\">\n        (+{{toppings.value.length - 1}} {{toppings.value?.length === 2 ? 'other' : 'others'}})\n      </span>\n    </mat-select-trigger>\n    <mat-option *ngFor=\"let topping of toppingList\" [value]=\"topping\">{{topping}}</mat-option>\n  </mat-select>\n</mat-form-field>\n","import {Component} from '@angular/core';\nimport {FormControl} from '@angular/forms';\n\n/** @title Select with custom trigger text */\n@Component({\n  selector: 'select-custom-trigger-example',\n  templateUrl: 'select-custom-trigger-example.html',\n  styleUrls: ['select-custom-trigger-example.css'],\n})\nexport class SelectCustomTriggerExample {\n  toppings = new FormControl();\n\n  toppingList: string[] = ['Extra cheese', 'Mushroom', 'Onion', 'Pepperoni', 'Sausage', 'Tomato'];\n}\n","import {Component} from '@angular/core';\nimport {FormControl} from '@angular/forms';\n\n/** @title Disabled select */\n@Component({\n  selector: 'select-disabled-example',\n  templateUrl: 'select-disabled-example.html',\n})\nexport class SelectDisabledExample {\n  disableSelect = new FormControl(false);\n}\n","<p>\n  <mat-checkbox [formControl]=\"disableSelect\">Disable select</mat-checkbox>\n</p>\n\n<h4>mat-select</h4>\n<mat-form-field appearance=\"fill\">\n  <mat-label>Choose an option</mat-label>\n  <mat-select [disabled]=\"disableSelect.value\">\n    <mat-option value=\"option1\">Option 1</mat-option>\n    <mat-option value=\"option2\" disabled>Option 2 (disabled)</mat-option>\n    <mat-option value=\"option3\">Option 3</mat-option>\n  </mat-select>\n</mat-form-field>\n\n<h4>native html select</h4>\n<mat-form-field appearance=\"fill\">\n  <mat-label>Choose an option</mat-label>\n  <select matNativeControl [disabled]=\"disableSelect.value\">\n    <option value=\"\" selected></option>\n    <option value=\"volvo\">Volvo</option>\n    <option value=\"saab\" disabled>Saab</option>\n    <option value=\"mercedes\">Mercedes</option>\n    <option value=\"audi\">Audi</option>\n  </select>\n</mat-form-field>\n\n","<h4>mat-select</h4>\n<mat-form-field appearance=\"fill\">\n  <mat-label>Choose one</mat-label>\n  <mat-select [formControl]=\"selected\" [errorStateMatcher]=\"matcher\">\n    <mat-option>Clear</mat-option>\n    <mat-option value=\"valid\">Valid option</mat-option>\n    <mat-option value=\"invalid\">Invalid option</mat-option>\n  </mat-select>\n  <mat-hint>Errors appear instantly!</mat-hint>\n  <mat-error *ngIf=\"selected.hasError('required')\">You must make a selection</mat-error>\n  <mat-error *ngIf=\"selected.hasError('pattern') && !selected.hasError('required')\">\n    Your selection is invalid\n  </mat-error>\n</mat-form-field>\n\n<h4>native html select</h4>\n<mat-form-field class=\"demo-full-width\" appearance=\"fill\">\n  <mat-label>Choose one</mat-label>\n  <select matNativeControl [formControl]=\"nativeSelectFormControl\" [errorStateMatcher]=\"matcher\">\n    <option value=\"\"></option>\n    <option value=\"valid\" selected>Valid option</option>\n    <option value=\"invalid\">Invalid option</option>\n  </select>\n  <mat-error *ngIf=\"nativeSelectFormControl.hasError('required')\">You must make a selection</mat-error>\n  <mat-error *ngIf=\"nativeSelectFormControl.hasError('pattern') && !nativeSelectFormControl.hasError('required')\">\n    Your selection is invalid\n  </mat-error>\n</mat-form-field>\n","import {Component} from '@angular/core';\nimport {FormControl, FormGroupDirective, NgForm, Validators} from '@angular/forms';\nimport {ErrorStateMatcher} from '@angular/material/core';\n\n/** Error when invalid control is dirty, touched, or submitted. */\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\n/** @title Select with a custom ErrorStateMatcher */\n@Component({\n  selector: 'select-error-state-matcher-example',\n  templateUrl: 'select-error-state-matcher-example.html',\n})\nexport class SelectErrorStateMatcherExample {\n  selected = new FormControl('valid', [\n    Validators.required,\n    Validators.pattern('valid'),\n  ]);\n\n  selectFormControl = new FormControl('valid', [\n    Validators.required,\n    Validators.pattern('valid'),\n  ]);\n\n  nativeSelectFormControl = new FormControl('valid', [\n    Validators.required,\n    Validators.pattern('valid'),\n  ]);\n\n  matcher = new MyErrorStateMatcher();\n}\n","<form>\n  <h4>mat-select</h4>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Favorite food</mat-label>\n    <mat-select [(ngModel)]=\"selectedValue\" name=\"food\">\n      <mat-option *ngFor=\"let food of foods\" [value]=\"food.value\">\n        {{food.viewValue}}\n      </mat-option>\n    </mat-select>\n  </mat-form-field>\n  <p> Selected food: {{selectedValue}} </p>\n  <h4>native html select</h4>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Favorite car</mat-label>\n    <select matNativeControl [(ngModel)]=\"selectedCar\" name=\"car\">\n      <option value=\"\" selected></option>\n      <option *ngFor=\"let car of cars\" [value]=\"car.value\">\n        {{car.viewValue}}\n      </option>\n    </select>\n  </mat-form-field>\n  <p> Selected car: {{selectedCar}} </p>\n</form>\n","import {Component} from '@angular/core';\n\ninterface Food {\n  value: string;\n  viewValue: string;\n}\n\ninterface Car {\n  value: string;\n  viewValue: string;\n}\n\n/**\n * @title Select in a form\n */\n@Component({\n  selector: 'select-form-example',\n  templateUrl: 'select-form-example.html',\n})\nexport class SelectFormExample {\n  selectedValue: string;\n  selectedCar: string;\n\n  foods: Food[] = [\n    {value: 'steak-0', viewValue: 'Steak'},\n    {value: 'pizza-1', viewValue: 'Pizza'},\n    {value: 'tacos-2', viewValue: 'Tacos'}\n  ];\n\n  cars: Car[] = [\n    {value: 'volvo', viewValue: 'Volvo'},\n    {value: 'saab', viewValue: 'Saab'},\n    {value: 'mercedes', viewValue: 'Mercedes'}\n  ];\n}\n","<h4>mat select</h4>\n<mat-form-field appearance=\"fill\">\n  <mat-label>Favorite animal</mat-label>\n  <mat-select [formControl]=\"animalControl\" required>\n    <mat-option>--</mat-option>\n    <mat-option *ngFor=\"let animal of animals\" [value]=\"animal\">\n      {{animal.name}}\n    </mat-option>\n  </mat-select>\n  <mat-error *ngIf=\"animalControl.hasError('required')\">Please choose an animal</mat-error>\n  <mat-hint>{{animalControl.value?.sound}}</mat-hint>\n</mat-form-field>\n\n<h4>native html select</h4>\n<mat-form-field appearance=\"fill\">\n  <mat-label>Select your car (required)</mat-label>\n  <select matNativeControl required [formControl]=\"selectFormControl\">\n    <option label=\"--select something --\"></option>\n    <option value=\"saab\">Saab</option>\n    <option value=\"mercedes\">Mercedes</option>\n    <option value=\"audi\">Audi</option>\n  </select>\n  <mat-error *ngIf=\"selectFormControl.hasError('required')\">\n    This field is required\n  </mat-error>\n  <mat-hint>You can pick up your favorite car here</mat-hint>\n</mat-form-field>\n\n","import {Component} from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\n\ninterface Animal {\n  name: string;\n  sound: string;\n}\n\n/** @title Select with form field features */\n@Component({\n  selector: 'select-hint-error-example',\n  templateUrl: 'select-hint-error-example.html',\n})\nexport class SelectHintErrorExample {\n  animalControl = new FormControl('', Validators.required);\n  selectFormControl = new FormControl('', Validators.required);\n  animals: Animal[] = [\n    {name: 'Dog', sound: 'Woof!'},\n    {name: 'Cat', sound: 'Meow!'},\n    {name: 'Cow', sound: 'Moo!'},\n    {name: 'Fox', sound: 'Wa-pa-pa-pa-pa-pa-pow!'},\n  ];\n}\n","<mat-form-field appearance=\"fill\">\n  <mat-label>Toppings</mat-label>\n  <mat-select [formControl]=\"toppings\" multiple>\n    <mat-option *ngFor=\"let topping of toppingList\" [value]=\"topping\">{{topping}}</mat-option>\n  </mat-select>\n</mat-form-field>\n","import {Component} from '@angular/core';\nimport {FormControl} from '@angular/forms';\n\n/** @title Select with multiple selection */\n@Component({\n  selector: 'select-multiple-example',\n  templateUrl: 'select-multiple-example.html',\n})\nexport class SelectMultipleExample {\n  toppings = new FormControl();\n  toppingList: string[] = ['Extra cheese', 'Mushroom', 'Onion', 'Pepperoni', 'Sausage', 'Tomato'];\n}\n","import {Component} from '@angular/core';\n\n/** @title Select with no option ripple */\n@Component({\n  selector: 'select-no-ripple-example',\n  templateUrl: 'select-no-ripple-example.html',\n})\nexport class SelectNoRippleExample {}\n","<mat-form-field appearance=\"fill\">\n  <mat-label>Select an option</mat-label>\n  <mat-select disableRipple>\n    <mat-option value=\"1\">Option 1</mat-option>\n    <mat-option value=\"2\">Option 2</mat-option>\n    <mat-option value=\"3\">Option 3</mat-option>\n  </mat-select>\n</mat-form-field>\n","<h4>mat-select</h4>\n<mat-form-field appearance=\"fill\">\n  <mat-label>Pokemon</mat-label>\n  <mat-select [formControl]=\"pokemonControl\">\n    <mat-option>-- None --</mat-option>\n    <mat-optgroup *ngFor=\"let group of pokemonGroups\" [label]=\"group.name\"\n                  [disabled]=\"group.disabled\">\n      <mat-option *ngFor=\"let pokemon of group.pokemon\" [value]=\"pokemon.value\">\n        {{pokemon.viewValue}}\n      </mat-option>\n    </mat-optgroup>\n  </mat-select>\n</mat-form-field>\n\n<h4>native html select</h4>\n<mat-form-field appearance=\"fill\">\n  <mat-label>Cars</mat-label>\n  <select matNativeControl>\n    <optgroup label=\"Swedish Cars\">\n      <option value=\"volvo\">volvo</option>\n      <option value=\"saab\">Saab</option>\n    </optgroup>\n    <optgroup label=\"German Cars\">\n      <option value=\"mercedes\">Mercedes</option>\n      <option value=\"audi\">Audi</option>\n    </optgroup>\n  </select>\n</mat-form-field>\n","import {Component} from '@angular/core';\nimport {FormControl} from '@angular/forms';\n\ninterface Pokemon {\n  value: string;\n  viewValue: string;\n}\n\ninterface PokemonGroup {\n  disabled?: boolean;\n  name: string;\n  pokemon: Pokemon[];\n}\n\n/** @title Select with option groups */\n@Component({\n  selector: 'select-optgroup-example',\n  templateUrl: 'select-optgroup-example.html',\n})\nexport class SelectOptgroupExample {\n  pokemonControl = new FormControl();\n  pokemonGroups: PokemonGroup[] = [\n    {\n      name: 'Grass',\n      pokemon: [\n        {value: 'bulbasaur-0', viewValue: 'Bulbasaur'},\n        {value: 'oddish-1', viewValue: 'Oddish'},\n        {value: 'bellsprout-2', viewValue: 'Bellsprout'}\n      ]\n    },\n    {\n      name: 'Water',\n      pokemon: [\n        {value: 'squirtle-3', viewValue: 'Squirtle'},\n        {value: 'psyduck-4', viewValue: 'Psyduck'},\n        {value: 'horsea-5', viewValue: 'Horsea'}\n      ]\n    },\n    {\n      name: 'Fire',\n      disabled: true,\n      pokemon: [\n        {value: 'charmander-6', viewValue: 'Charmander'},\n        {value: 'vulpix-7', viewValue: 'Vulpix'},\n        {value: 'flareon-8', viewValue: 'Flareon'}\n      ]\n    },\n    {\n      name: 'Psychic',\n      pokemon: [\n        {value: 'mew-9', viewValue: 'Mew'},\n        {value: 'mewtwo-10', viewValue: 'Mewtwo'},\n      ]\n    }\n  ];\n}\n","<h4>Basic mat-select</h4>\n<mat-form-field appearance=\"fill\">\n  <mat-label>Favorite food</mat-label>\n  <mat-select>\n    <mat-option *ngFor=\"let food of foods\" [value]=\"food.value\">\n      {{food.viewValue}}\n    </mat-option>\n  </mat-select>\n</mat-form-field>\n\n<h4>Basic native select</h4>\n<mat-form-field appearance=\"fill\">\n  <mat-label>Cars</mat-label>\n  <select matNativeControl required>\n    <option value=\"volvo\">Volvo</option>\n    <option value=\"saab\">Saab</option>\n    <option value=\"mercedes\">Mercedes</option>\n    <option value=\"audi\">Audi</option>\n  </select>\n</mat-form-field>\n","import {Component} from '@angular/core';\n\ninterface Food {\n  value: string;\n  viewValue: string;\n}\n\n/**\n * @title Basic select\n */\n@Component({\n  selector: 'select-overview-example',\n  templateUrl: 'select-overview-example.html',\n})\nexport class SelectOverviewExample {\n  foods: Food[] = [\n    {value: 'steak-0', viewValue: 'Steak'},\n    {value: 'pizza-1', viewValue: 'Pizza'},\n    {value: 'tacos-2', viewValue: 'Tacos'}\n  ];\n}\n","import {Component, ViewEncapsulation} from '@angular/core';\nimport {FormControl} from '@angular/forms';\n\n/**\n * @title Select with custom panel styling\n */\n@Component({\n  selector: 'select-panel-class-example',\n  templateUrl: 'select-panel-class-example.html',\n  styleUrls: ['select-panel-class-example.css'],\n  // Encapsulation has to be disabled in order for the\n  // component style to apply to the select panel.\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SelectPanelClassExample {\n  panelColor = new FormControl('red');\n}\n","<mat-form-field appearance=\"fill\">\n  <mat-label>Panel color</mat-label>\n  <mat-select [formControl]=\"panelColor\"\n              panelClass=\"example-panel-{{panelColor.value}}\">\n    <mat-option value=\"red\">Red</mat-option>\n    <mat-option value=\"green\">Green</mat-option>\n    <mat-option value=\"blue\">Blue</mat-option>\n  </mat-select>\n</mat-form-field>\n","<h4>mat-select</h4>\n<mat-form-field appearance=\"fill\">\n  <mat-label>State</mat-label>\n  <mat-select>\n    <mat-option>None</mat-option>\n    <mat-option *ngFor=\"let state of states\" [value]=\"state\">{{state}}</mat-option>\n  </mat-select>\n</mat-form-field>\n\n<h4>native html select</h4>\n<mat-form-field appearance=\"fill\">\n  <mat-label>Select your car</mat-label>\n  <select matNativeControl id=\"mySelectId\">\n    <option value=\"\" disabled selected></option>\n    <option value=\"volvo\">Volvo</option>\n    <option value=\"saab\">Saab</option>\n    <option value=\"mercedes\">Mercedes</option>\n    <option value=\"audi\">Audi</option>\n  </select>\n</mat-form-field>\n","import {Component} from '@angular/core';\n\n/** @title Select with reset option */\n@Component({\n  selector: 'select-reset-example',\n  templateUrl: 'select-reset-example.html',\n})\nexport class SelectResetExample {\n  states: string[] = [\n    'Alabama', 'Alaska', 'Arizona', 'Arkansas', 'California', 'Colorado', 'Connecticut', 'Delaware',\n    'Florida', 'Georgia', 'Hawaii', 'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky',\n    'Louisiana', 'Maine', 'Maryland', 'Massachusetts', 'Michigan', 'Minnesota', 'Mississippi',\n    'Missouri', 'Montana', 'Nebraska', 'Nevada', 'New Hampshire', 'New Jersey', 'New Mexico',\n    'New York', 'North Carolina', 'North Dakota', 'Ohio', 'Oklahoma', 'Oregon', 'Pennsylvania',\n    'Rhode Island', 'South Carolina', 'South Dakota', 'Tennessee', 'Texas', 'Utah', 'Vermont',\n    'Virginia', 'Washington', 'West Virginia', 'Wisconsin', 'Wyoming'\n  ];\n}\n","import {Component} from '@angular/core';\n\n/** @title Select with 2-way value binding */\n@Component({\n  selector: 'select-value-binding-example',\n  templateUrl: 'select-value-binding-example.html',\n})\nexport class SelectValueBindingExample {\n  selected = 'option2';\n}\n","<mat-form-field appearance=\"fill\">\n  <mat-label>Select an option</mat-label>\n  <mat-select [(value)]=\"selected\">\n    <mat-option>None</mat-option>\n    <mat-option value=\"option1\">Option 1</mat-option>\n    <mat-option value=\"option2\">Option 2</mat-option>\n    <mat-option value=\"option3\">Option 3</mat-option>\n  </mat-select>\n</mat-form-field>\n\n<p>You selected: {{selected}}</p>\n","<form [formGroup]=\"form\">\n  <h4>mat-select</h4>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Favorite Food</mat-label>\n    <mat-select [formControl]=\"foodControl\" name=\"food\">\n      <mat-option>None</mat-option>\n      <mat-option *ngFor=\"let food of foods\" [value]=\"food.value\">\n        {{food.viewValue}}\n      </mat-option>\n    </mat-select>\n  </mat-form-field>\n  <p>Selected: {{foodControl.value}}</p>\n  <h4>Native select</h4>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Favorite Car</mat-label>\n    <select matNativeControl [formControl]=\"carControl\" name=\"car\">\n      <option value=\"\">None</option>\n      <option *ngFor=\"let car of cars\" [value]=\"car.value\">\n        {{car.viewValue}}\n      </option>\n    </select>\n  </mat-form-field>\n  <p>Selected: {{carControl.value}}</p>\n</form>\n","import {Component} from '@angular/core';\nimport {FormControl, FormGroup} from '@angular/forms';\n\ninterface Food {\n  value: string;\n  viewValue: string;\n}\n\ninterface Car {\n  value: string;\n  viewValue: string;\n}\n\n/**\n * @title Select in a reactive form\n */\n@Component({\n  selector: 'select-reactive-form-example',\n  templateUrl: 'select-reactive-form-example.html',\n})\nexport class SelectReactiveFormExample {\n  form: FormGroup;\n  foods: Food[] = [\n    {value: 'steak-0', viewValue: 'Steak'},\n    {value: 'pizza-1', viewValue: 'Pizza'},\n    {value: 'tacos-2', viewValue: 'Tacos'}\n  ];\n  cars: Car[] = [\n    {value: 'volvo', viewValue: 'Volvo'},\n    {value: 'saab', viewValue: 'Saab'},\n    {value: 'mercedes', viewValue: 'Mercedes'}\n  ];\n  foodControl = new FormControl(this.foods[2].value);\n  carControl = new FormControl(this.cars[1].value);\n\n  constructor() {\n    this.form = new FormGroup({\n      food: this.foodControl,\n      car: this.carControl\n    });\n  }\n}\n","<h4>Basic mat-select with initial value</h4>\n<mat-form-field appearance=\"fill\">\n  <mat-label>Favorite Food</mat-label>\n  <mat-select [(value)]=\"selectedFood\">\n    <mat-option></mat-option>\n    <mat-option [value]=\"option.value\" *ngFor=\"let option of foods\">{{ option.viewValue }}</mat-option>\n  </mat-select>\n</mat-form-field>\n<p>You selected: {{selectedFood}}</p>\n\n<h4>Basic native select with initial value</h4>\n<mat-form-field appearance=\"fill\">\n  <mat-label>Favorite Car</mat-label>\n  <select matNativeControl (change)=\"selectCar($event)\">\n    <option value=\"\"></option>\n    <option *ngFor=\"let option of cars\" [value]=\"option.value\"\n            [selected]=\"selectedCar === option.value\">{{ option.viewValue }}</option>\n  </select>\n</mat-form-field>\n<p>You selected: {{selectedCar}}</p>\n","import {Component} from '@angular/core';\n\ninterface Food {\n  value: string;\n  viewValue: string;\n}\n\ninterface Car {\n  value: string;\n  viewValue: string;\n}\n\n/**\n * @title Basic select with initial value and no form\n */\n@Component({\n  selector: 'select-initial-value-example',\n  templateUrl: 'select-initial-value-example.html',\n})\nexport class SelectInitialValueExample {\n  foods: Food[] = [\n    {value: 'steak-0', viewValue: 'Steak'},\n    {value: 'pizza-1', viewValue: 'Pizza'},\n    {value: 'tacos-2', viewValue: 'Tacos'}\n  ];\n  cars: Car[] = [\n    {value: 'ford', viewValue: 'Ford'},\n    {value: 'chevrolet', viewValue: 'Chevrolet'},\n    {value: 'dodge', viewValue: 'Dodge'}\n  ];\n  selectedFood = this.foods[2].value;\n  selectedCar = this.cars[0].value;\n\n  selectCar(event: Event) {\n    this.selectedCar = (event.target as HTMLSelectElement).value;\n  }\n}\n","<mat-form-field appearance=\"fill\">\n  <mat-label>Favorite food</mat-label>\n  <mat-select>\n    <mat-option *ngFor=\"let food of foods\" [value]=\"food.value\">\n      {{food.viewValue}}\n    </mat-option>\n  </mat-select>\n</mat-form-field>\n","import {Component} from '@angular/core';\n\n/**\n * @title Testing with MatSelectHarness\n */\n@Component({\n  selector: 'select-harness-example',\n  templateUrl: 'select-harness-example.html',\n})\nexport class SelectHarnessExample {\n  foods = [\n    {value: 'steak-0', viewValue: 'Steak'},\n    {value: 'pizza-1', viewValue: 'Pizza'},\n    {value: 'tacos-2', viewValue: 'Tacos'}\n  ];\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material/select';\nimport {SelectCustomTriggerExample} from './select-custom-trigger/select-custom-trigger-example';\nimport {SelectDisabledExample} from './select-disabled/select-disabled-example';\nimport {\n  SelectErrorStateMatcherExample\n} from './select-error-state-matcher/select-error-state-matcher-example';\nimport {SelectFormExample} from './select-form/select-form-example';\nimport {SelectHintErrorExample} from './select-hint-error/select-hint-error-example';\nimport {SelectMultipleExample} from './select-multiple/select-multiple-example';\nimport {SelectNoRippleExample} from './select-no-ripple/select-no-ripple-example';\nimport {SelectOptgroupExample} from './select-optgroup/select-optgroup-example';\nimport {SelectOverviewExample} from './select-overview/select-overview-example';\nimport {SelectPanelClassExample} from './select-panel-class/select-panel-class-example';\nimport {SelectResetExample} from './select-reset/select-reset-example';\nimport {SelectValueBindingExample} from './select-value-binding/select-value-binding-example';\nimport {SelectReactiveFormExample} from './select-reactive-form/select-reactive-form-example';\nimport {SelectInitialValueExample} from './select-initial-value/select-initial-value-example';\nimport {SelectHarnessExample} from './select-harness/select-harness-example';\nimport {MatFormFieldModule} from '@angular/material/form-field';\n\nexport {\n  SelectCustomTriggerExample,\n  SelectDisabledExample,\n  SelectErrorStateMatcherExample,\n  SelectFormExample,\n  SelectHarnessExample,\n  SelectHintErrorExample,\n  SelectInitialValueExample,\n  SelectMultipleExample,\n  SelectNoRippleExample,\n  SelectOptgroupExample,\n  SelectOverviewExample,\n  SelectPanelClassExample,\n  SelectReactiveFormExample,\n  SelectResetExample,\n  SelectValueBindingExample,\n};\n\nconst EXAMPLES = [\n  SelectCustomTriggerExample,\n  SelectDisabledExample,\n  SelectErrorStateMatcherExample,\n  SelectFormExample,\n  SelectHarnessExample,\n  SelectHintErrorExample,\n  SelectInitialValueExample,\n  SelectMultipleExample,\n  SelectNoRippleExample,\n  SelectOptgroupExample,\n  SelectOverviewExample,\n  SelectPanelClassExample,\n  SelectReactiveFormExample,\n  SelectResetExample,\n  SelectValueBindingExample,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatCheckboxModule,\n    MatInputModule,\n    MatSelectModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n  ],\n  declarations: EXAMPLES,\n  exports: EXAMPLES,\n  entryComponents: EXAMPLES,\n})\nexport class SelectExamplesModule {\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i0","FormControl","Component","Validators","ViewEncapsulation","FormGroup","CommonModule","FormsModule","MatCheckboxModule","MatInputModule","MatSelectModule","ReactiveFormsModule","MatFormFieldModule","NgModule"],"mappings":"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"}