{"version":3,"sources":["src/components-examples/components-examples-material-checkbox.umd.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","ng","componentsExamples","material","checkbox","common","core","forms","card","radio","this","i2","i0","i3","i1","i1$1","i4","_interopNamespace","e","__esModule","n","Object","create","keys","forEach","k","d","getOwnPropertyDescriptor","defineProperty","get","enumerable","freeze","CheckboxConfigurableExample","i2__namespace","i0__namespace","i3__namespace","i1__namespace","i1__namespace$1","i4__namespace","CheckboxOverviewExample_li_11_Template","rf","ctx","_r4_1","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","CheckboxOverviewExample_li_11_Template_mat_checkbox_ngModelChange_1_listener","$event","$implicit","completed","ɵɵrestoreView","ɵɵnextContext","updateAllComplete","ɵɵtext","ɵɵelementEnd","subtask_r1","ɵɵadvance","ɵɵproperty","color","ɵɵtextInterpolate1","name","checked","indeterminate","labelPosition","disabled","ɵfac","CheckboxConfigurableExample_Factory","t","ɵcmp","ɵɵdefineComponent","type","selectors","decls","vars","consts","template","CheckboxConfigurableExample_Template","CheckboxConfigurableExample_Template_mat_checkbox_ngModelChange_5_listener","CheckboxConfigurableExample_Template_mat_checkbox_ngModelChange_7_listener","CheckboxConfigurableExample_Template_mat_radio_group_ngModelChange_12_listener","CheckboxConfigurableExample_Template_mat_checkbox_ngModelChange_18_listener","CheckboxConfigurableExample_Template_mat_checkbox_ngModelChange_25_listener","CheckboxConfigurableExample_Template_mat_checkbox_indeterminateChange_25_listener","directives","MatCard","MatCardContent","MatCheckbox","NgControlStatus","NgModel","MatRadioGroup","MatRadioButton","styles","CheckboxHarnessExample","CheckboxExamplesModule","CheckboxOverviewExample","task","subtasks","allComplete","prototype","every","someComplete","filter","length","setAll","CheckboxOverviewExample_Factory","CheckboxOverviewExample_Template","CheckboxOverviewExample_Template_mat_checkbox_change_7_listener","ɵɵtemplate","NgForOf","CheckboxHarnessExample_Factory","CheckboxHarnessExample_Template","encapsulation","CheckboxExamplesModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","CommonModule","MatCardModule","MatCheckboxModule","MatRadioModule","FormsModule","ngJitMode","ɵɵsetNgModuleScope","declarations","value"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('@angular/core'), require('@angular/forms'), require('@angular/material/card'), require('@angular/material/checkbox'), require('@angular/material/radio')) :\n    typeof define === 'function' && define.amd ? define('@angular/components-examples/material/checkbox', ['exports', '@angular/common', '@angular/core', '@angular/forms', '@angular/material/card', '@angular/material/checkbox', '@angular/material/radio'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.ng = global.ng || {}, global.ng.componentsExamples = global.ng.componentsExamples || {}, global.ng.componentsExamples.material = global.ng.componentsExamples.material || {}, global.ng.componentsExamples.material.checkbox = {}), global.ng.common, global.ng.core, global.ng.forms, global.ng.material.card, global.ng.material.checkbox, global.ng.material.radio));\n}(this, (function (exports, i2, i0, i3, i1, i1$1, i4) { 'use strict';\n\n    function _interopNamespace(e) {\n        if (e && e.__esModule) return e;\n        var n = Object.create(null);\n        if (e) {\n            Object.keys(e).forEach(function (k) {\n                if (k !== 'default') {\n                    var d = Object.getOwnPropertyDescriptor(e, k);\n                    Object.defineProperty(n, k, d.get ? d : {\n                        enumerable: true,\n                        get: function () {\n                            return e[k];\n                        }\n                    });\n                }\n            });\n        }\n        n['default'] = e;\n        return Object.freeze(n);\n    }\n\n    var i2__namespace = /*#__PURE__*/_interopNamespace(i2);\n    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);\n    var i3__namespace = /*#__PURE__*/_interopNamespace(i3);\n    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);\n    var i1__namespace$1 = /*#__PURE__*/_interopNamespace(i1$1);\n    var i4__namespace = /*#__PURE__*/_interopNamespace(i4);\n\n    /**\n     * @title Configurable checkbox\n     */\n    var CheckboxConfigurableExample = /** @class */ (function () {\n        function CheckboxConfigurableExample() {\n            this.checked = false;\n            this.indeterminate = false;\n            this.labelPosition = 'after';\n            this.disabled = false;\n        }\n        return CheckboxConfigurableExample;\n    }());\n    CheckboxConfigurableExample.ɵfac = function CheckboxConfigurableExample_Factory(t) { return new (t || CheckboxConfigurableExample)(); };\n    CheckboxConfigurableExample.ɵcmp = /*@__PURE__*/ i0__namespace.ɵɵdefineComponent({ type: CheckboxConfigurableExample, selectors: [[\"checkbox-configurable-example\"]], decls: 27, vars: 8, consts: [[1, \"example-h2\"], [1, \"example-section\"], [1, \"example-margin\", 3, \"ngModel\", \"ngModelChange\"], [1, \"example-margin\"], [3, \"ngModel\", \"ngModelChange\"], [\"value\", \"after\", 1, \"example-margin\"], [\"value\", \"before\", 1, \"example-margin\"], [1, \"result\"], [1, \"example-margin\", 3, \"ngModel\", \"indeterminate\", \"labelPosition\", \"disabled\", \"ngModelChange\", \"indeterminateChange\"]], template: function CheckboxConfigurableExample_Template(rf, ctx) {\n            if (rf & 1) {\n                i0__namespace.ɵɵelementStart(0, \"mat-card\");\n                i0__namespace.ɵɵelementStart(1, \"mat-card-content\");\n                i0__namespace.ɵɵelementStart(2, \"h2\", 0);\n                i0__namespace.ɵɵtext(3, \"Checkbox configuration\");\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelementStart(4, \"section\", 1);\n                i0__namespace.ɵɵelementStart(5, \"mat-checkbox\", 2);\n                i0__namespace.ɵɵlistener(\"ngModelChange\", function CheckboxConfigurableExample_Template_mat_checkbox_ngModelChange_5_listener($event) { return ctx.checked = $event; });\n                i0__namespace.ɵɵtext(6, \"Checked\");\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelementStart(7, \"mat-checkbox\", 2);\n                i0__namespace.ɵɵlistener(\"ngModelChange\", function CheckboxConfigurableExample_Template_mat_checkbox_ngModelChange_7_listener($event) { return ctx.indeterminate = $event; });\n                i0__namespace.ɵɵtext(8, \"Indeterminate\");\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelementStart(9, \"section\", 1);\n                i0__namespace.ɵɵelementStart(10, \"label\", 3);\n                i0__namespace.ɵɵtext(11, \"Align:\");\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelementStart(12, \"mat-radio-group\", 4);\n                i0__namespace.ɵɵlistener(\"ngModelChange\", function CheckboxConfigurableExample_Template_mat_radio_group_ngModelChange_12_listener($event) { return ctx.labelPosition = $event; });\n                i0__namespace.ɵɵelementStart(13, \"mat-radio-button\", 5);\n                i0__namespace.ɵɵtext(14, \"After\");\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelementStart(15, \"mat-radio-button\", 6);\n                i0__namespace.ɵɵtext(16, \"Before\");\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelementStart(17, \"section\", 1);\n                i0__namespace.ɵɵelementStart(18, \"mat-checkbox\", 2);\n                i0__namespace.ɵɵlistener(\"ngModelChange\", function CheckboxConfigurableExample_Template_mat_checkbox_ngModelChange_18_listener($event) { return ctx.disabled = $event; });\n                i0__namespace.ɵɵtext(19, \"Disabled\");\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelementStart(20, \"mat-card\", 7);\n                i0__namespace.ɵɵelementStart(21, \"mat-card-content\");\n                i0__namespace.ɵɵelementStart(22, \"h2\", 0);\n                i0__namespace.ɵɵtext(23, \"Result\");\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelementStart(24, \"section\", 1);\n                i0__namespace.ɵɵelementStart(25, \"mat-checkbox\", 8);\n                i0__namespace.ɵɵlistener(\"ngModelChange\", function CheckboxConfigurableExample_Template_mat_checkbox_ngModelChange_25_listener($event) { return ctx.checked = $event; })(\"indeterminateChange\", function CheckboxConfigurableExample_Template_mat_checkbox_indeterminateChange_25_listener($event) { return ctx.indeterminate = $event; });\n                i0__namespace.ɵɵtext(26, \" I'm a checkbox \");\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelementEnd();\n            }\n            if (rf & 2) {\n                i0__namespace.ɵɵadvance(5);\n                i0__namespace.ɵɵproperty(\"ngModel\", ctx.checked);\n                i0__namespace.ɵɵadvance(2);\n                i0__namespace.ɵɵproperty(\"ngModel\", ctx.indeterminate);\n                i0__namespace.ɵɵadvance(5);\n                i0__namespace.ɵɵproperty(\"ngModel\", ctx.labelPosition);\n                i0__namespace.ɵɵadvance(6);\n                i0__namespace.ɵɵproperty(\"ngModel\", ctx.disabled);\n                i0__namespace.ɵɵadvance(7);\n                i0__namespace.ɵɵproperty(\"ngModel\", ctx.checked)(\"indeterminate\", ctx.indeterminate)(\"labelPosition\", ctx.labelPosition)(\"disabled\", ctx.disabled);\n            }\n        }, directives: [i1__namespace.MatCard, i1__namespace.MatCardContent, i1__namespace$1.MatCheckbox, i3__namespace.NgControlStatus, i3__namespace.NgModel, i4__namespace.MatRadioGroup, i4__namespace.MatRadioButton], styles: [\".example-h2[_ngcontent-%COMP%] {\\n  margin: 10px;\\n}\\n\\n.example-section[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-content: center;\\n  align-items: center;\\n  height: 60px;\\n}\\n\\n.example-margin[_ngcontent-%COMP%] {\\n  margin: 0 10px;\\n}\"] });\n    (function () {\n        (typeof ngDevMode === \"undefined\" || ngDevMode) && i0__namespace.ɵsetClassMetadata(CheckboxConfigurableExample, [{\n                type: i0.Component,\n                args: [{\n                        selector: 'checkbox-configurable-example',\n                        templateUrl: 'checkbox-configurable-example.html',\n                        styleUrls: ['checkbox-configurable-example.css'],\n                    }]\n            }], null, null);\n    })();\n\n    function CheckboxOverviewExample_li_11_Template(rf, ctx) {\n        if (rf & 1) {\n            var _r4_1 = i0__namespace.ɵɵgetCurrentView();\n            i0__namespace.ɵɵelementStart(0, \"li\");\n            i0__namespace.ɵɵelementStart(1, \"mat-checkbox\", 6);\n            i0__namespace.ɵɵlistener(\"ngModelChange\", function CheckboxOverviewExample_li_11_Template_mat_checkbox_ngModelChange_1_listener($event) { var subtask_r1 = ctx.$implicit; return subtask_r1.completed = $event; })(\"ngModelChange\", function CheckboxOverviewExample_li_11_Template_mat_checkbox_ngModelChange_1_listener() { i0__namespace.ɵɵrestoreView(_r4_1); var ctx_r3 = i0__namespace.ɵɵnextContext(); return ctx_r3.updateAllComplete(); });\n            i0__namespace.ɵɵtext(2);\n            i0__namespace.ɵɵelementEnd();\n            i0__namespace.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n            var subtask_r1 = ctx.$implicit;\n            i0__namespace.ɵɵadvance(1);\n            i0__namespace.ɵɵproperty(\"ngModel\", subtask_r1.completed)(\"color\", subtask_r1.color);\n            i0__namespace.ɵɵadvance(1);\n            i0__namespace.ɵɵtextInterpolate1(\" \", subtask_r1.name, \" \");\n        }\n    }\n    /**\n     * @title Basic checkboxes\n     */\n    var CheckboxOverviewExample = /** @class */ (function () {\n        function CheckboxOverviewExample() {\n            this.task = {\n                name: 'Indeterminate',\n                completed: false,\n                color: 'primary',\n                subtasks: [\n                    { name: 'Primary', completed: false, color: 'primary' },\n                    { name: 'Accent', completed: false, color: 'accent' },\n                    { name: 'Warn', completed: false, color: 'warn' }\n                ]\n            };\n            this.allComplete = false;\n        }\n        CheckboxOverviewExample.prototype.updateAllComplete = function () {\n            this.allComplete = this.task.subtasks != null && this.task.subtasks.every(function (t) { return t.completed; });\n        };\n        CheckboxOverviewExample.prototype.someComplete = function () {\n            if (this.task.subtasks == null) {\n                return false;\n            }\n            return this.task.subtasks.filter(function (t) { return t.completed; }).length > 0 && !this.allComplete;\n        };\n        CheckboxOverviewExample.prototype.setAll = function (completed) {\n            this.allComplete = completed;\n            if (this.task.subtasks == null) {\n                return;\n            }\n            this.task.subtasks.forEach(function (t) { return t.completed = completed; });\n        };\n        return CheckboxOverviewExample;\n    }());\n    CheckboxOverviewExample.ɵfac = function CheckboxOverviewExample_Factory(t) { return new (t || CheckboxOverviewExample)(); };\n    CheckboxOverviewExample.ɵcmp = /*@__PURE__*/ i0__namespace.ɵɵdefineComponent({ type: CheckboxOverviewExample, selectors: [[\"checkbox-overview-example\"]], decls: 12, vars: 6, consts: [[1, \"example-section\"], [1, \"example-margin\"], [1, \"example-margin\", 3, \"disabled\"], [1, \"example-list-section\"], [1, \"example-margin\", 3, \"checked\", \"color\", \"indeterminate\", \"change\"], [4, \"ngFor\", \"ngForOf\"], [3, \"ngModel\", \"color\", \"ngModelChange\"]], template: function CheckboxOverviewExample_Template(rf, ctx) {\n            if (rf & 1) {\n                i0__namespace.ɵɵelementStart(0, \"section\", 0);\n                i0__namespace.ɵɵelementStart(1, \"mat-checkbox\", 1);\n                i0__namespace.ɵɵtext(2, \"Check me!\");\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelementStart(3, \"mat-checkbox\", 2);\n                i0__namespace.ɵɵtext(4, \"Disabled\");\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelementStart(5, \"section\", 0);\n                i0__namespace.ɵɵelementStart(6, \"span\", 3);\n                i0__namespace.ɵɵelementStart(7, \"mat-checkbox\", 4);\n                i0__namespace.ɵɵlistener(\"change\", function CheckboxOverviewExample_Template_mat_checkbox_change_7_listener($event) { return ctx.setAll($event.checked); });\n                i0__namespace.ɵɵtext(8);\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelementStart(9, \"span\", 3);\n                i0__namespace.ɵɵelementStart(10, \"ul\");\n                i0__namespace.ɵɵtemplate(11, CheckboxOverviewExample_li_11_Template, 3, 3, \"li\", 5);\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelementEnd();\n            }\n            if (rf & 2) {\n                i0__namespace.ɵɵadvance(3);\n                i0__namespace.ɵɵproperty(\"disabled\", true);\n                i0__namespace.ɵɵadvance(4);\n                i0__namespace.ɵɵproperty(\"checked\", ctx.allComplete)(\"color\", ctx.task.color)(\"indeterminate\", ctx.someComplete());\n                i0__namespace.ɵɵadvance(1);\n                i0__namespace.ɵɵtextInterpolate1(\" \", ctx.task.name, \" \");\n                i0__namespace.ɵɵadvance(3);\n                i0__namespace.ɵɵproperty(\"ngForOf\", ctx.task.subtasks);\n            }\n        }, directives: [i1__namespace$1.MatCheckbox, i2__namespace.NgForOf, i3__namespace.NgControlStatus, i3__namespace.NgModel], styles: [\".example-section[_ngcontent-%COMP%] {\\n  margin: 12px 0;\\n}\\n\\n.example-margin[_ngcontent-%COMP%] {\\n  margin: 0 12px;\\n}\\n\\nul[_ngcontent-%COMP%] {\\n  list-style-type: none;\\n  margin-top: 4px;\\n}\"] });\n    (function () {\n        (typeof ngDevMode === \"undefined\" || ngDevMode) && i0__namespace.ɵsetClassMetadata(CheckboxOverviewExample, [{\n                type: i0.Component,\n                args: [{\n                        selector: 'checkbox-overview-example',\n                        templateUrl: 'checkbox-overview-example.html',\n                        styleUrls: ['checkbox-overview-example.css'],\n                    }]\n            }], null, null);\n    })();\n\n    /**\n     * @title Testing with MatCheckboxHarness\n     */\n    var CheckboxHarnessExample = /** @class */ (function () {\n        function CheckboxHarnessExample() {\n            this.disabled = true;\n        }\n        return CheckboxHarnessExample;\n    }());\n    CheckboxHarnessExample.ɵfac = function CheckboxHarnessExample_Factory(t) { return new (t || CheckboxHarnessExample)(); };\n    CheckboxHarnessExample.ɵcmp = /*@__PURE__*/ i0__namespace.ɵɵdefineComponent({ type: CheckboxHarnessExample, selectors: [[\"checkbox-harness-example\"]], decls: 4, vars: 2, consts: [[\"required\", \"\", \"name\", \"first-name\", \"value\", \"first-value\", \"aria-label\", \"First checkbox\", 3, \"checked\"], [\"indeterminate\", \"true\", \"aria-label\", \"Second checkbox\", 3, \"disabled\"]], template: function CheckboxHarnessExample_Template(rf, ctx) {\n            if (rf & 1) {\n                i0__namespace.ɵɵelementStart(0, \"mat-checkbox\", 0);\n                i0__namespace.ɵɵtext(1, \" First\\n\");\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelementStart(2, \"mat-checkbox\", 1);\n                i0__namespace.ɵɵtext(3, \" Second\\n\");\n                i0__namespace.ɵɵelementEnd();\n            }\n            if (rf & 2) {\n                i0__namespace.ɵɵproperty(\"checked\", true);\n                i0__namespace.ɵɵadvance(2);\n                i0__namespace.ɵɵproperty(\"disabled\", ctx.disabled);\n            }\n        }, directives: [i1__namespace$1.MatCheckbox], encapsulation: 2 });\n    (function () {\n        (typeof ngDevMode === \"undefined\" || ngDevMode) && i0__namespace.ɵsetClassMetadata(CheckboxHarnessExample, [{\n                type: i0.Component,\n                args: [{\n                        selector: 'checkbox-harness-example',\n                        templateUrl: 'checkbox-harness-example.html',\n                    }]\n            }], null, null);\n    })();\n\n    var EXAMPLES = [\n        CheckboxConfigurableExample,\n        CheckboxOverviewExample,\n        CheckboxHarnessExample,\n    ];\n    var CheckboxExamplesModule = /** @class */ (function () {\n        function CheckboxExamplesModule() {\n        }\n        return CheckboxExamplesModule;\n    }());\n    CheckboxExamplesModule.ɵfac = function CheckboxExamplesModule_Factory(t) { return new (t || CheckboxExamplesModule)(); };\n    CheckboxExamplesModule.ɵmod = /*@__PURE__*/ i0__namespace.ɵɵdefineNgModule({ type: CheckboxExamplesModule });\n    CheckboxExamplesModule.ɵinj = /*@__PURE__*/ i0__namespace.ɵɵdefineInjector({ imports: [[\n                i2.CommonModule,\n                i1.MatCardModule,\n                i1$1.MatCheckboxModule,\n                i4.MatRadioModule,\n                i3.FormsModule,\n            ]] });\n    (function () {\n        (typeof ngDevMode === \"undefined\" || ngDevMode) && i0__namespace.ɵsetClassMetadata(CheckboxExamplesModule, [{\n                type: i0.NgModule,\n                args: [{\n                        imports: [\n                            i2.CommonModule,\n                            i1.MatCardModule,\n                            i1$1.MatCheckboxModule,\n                            i4.MatRadioModule,\n                            i3.FormsModule,\n                        ],\n                        declarations: EXAMPLES,\n                        exports: EXAMPLES,\n                        entryComponents: EXAMPLES,\n                    }]\n            }], null, null);\n    })();\n    (function () {\n        (typeof ngJitMode === \"undefined\" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(CheckboxExamplesModule, { declarations: [CheckboxConfigurableExample,\n                CheckboxOverviewExample,\n                CheckboxHarnessExample], imports: [i2.CommonModule,\n                i1.MatCardModule,\n                i1$1.MatCheckboxModule,\n                i4.MatRadioModule,\n                i3.FormsModule], exports: [CheckboxConfigurableExample,\n                CheckboxOverviewExample,\n                CheckboxHarnessExample] });\n    })();\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.CheckboxConfigurableExample = CheckboxConfigurableExample;\n    exports.CheckboxExamplesModule = CheckboxExamplesModule;\n    exports.CheckboxHarnessExample = CheckboxHarnessExample;\n    exports.CheckboxOverviewExample = CheckboxOverviewExample;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=components-examples-material-checkbox.umd.js.map\n"]}