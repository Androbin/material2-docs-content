{"version":3,"sources":["src/components-examples/components-examples-material-divider.umd.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","ng","componentsExamples","material","divider","core","list","this","i0","i2","i1","_interopNamespace","e","__esModule","n","Object","create","keys","forEach","k","d","getOwnPropertyDescriptor","defineProperty","get","enumerable","freeze","DividerOverviewExample","DividerHarnessExample","DividerExamplesModule","i0__namespace","i2__namespace","i1__namespace","ɵfac","DividerOverviewExample_Factory","t","ɵcmp","ɵɵdefineComponent","type","selectors","decls","vars","template","DividerOverviewExample_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","directives","MatList","MatListItem","MatDivider","encapsulation","DividerHarnessExample_Factory","consts","DividerHarnessExample_Template","DividerExamplesModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","MatDividerModule","MatListModule","ngJitMode","ɵɵsetNgModuleScope","declarations","value"],"mappings":"CAAC,SAAUA,EAAQC,GACI,iBAAZC,SAA0C,oBAAXC,OAAyBF,EAAQC,QAASE,QAAQ,iBAAkBA,QAAQ,6BAA8BA,QAAQ,2BACtI,mBAAXC,QAAyBA,OAAOC,IAAMD,OAAO,gDAAiD,CAAC,UAAW,gBAAiB,4BAA6B,0BAA2BJ,GAC/GA,IAA1ED,EAA+B,oBAAfO,WAA6BA,WAAaP,GAAUQ,MAAsBC,GAAKT,EAAOS,IAAM,GAAIT,EAAOS,GAAGC,mBAAqBV,EAAOS,GAAGC,oBAAsB,GAAIV,EAAOS,GAAGC,mBAAmBC,SAAWX,EAAOS,GAAGC,mBAAmBC,UAAY,GAAIX,EAAOS,GAAGC,mBAAmBC,SAASC,QAAU,IAAKZ,EAAOS,GAAGI,KAAMb,EAAOS,GAAGE,SAASC,QAASZ,EAAOS,GAAGE,SAASG,MAHjY,CAIEC,MAAM,SAAWb,EAASc,EAAIC,EAAIC,GAAM,aAEtC,SAASC,EAAkBC,GACvB,GAAIA,GAAKA,EAAEC,WAAY,OAAOD,EAC9B,IAAIE,EAAIC,OAAOC,OAAO,MAetB,OAdIJ,GACAG,OAAOE,KAAKL,GAAGM,SAAQ,SAAUC,GAC7B,GAAU,YAANA,EAAiB,CACjB,IAAIC,EAAIL,OAAOM,yBAAyBT,EAAGO,GAC3CJ,OAAOO,eAAeR,EAAGK,EAAGC,EAAEG,IAAMH,EAAI,CACpCI,YAAY,EACZD,IAAK,WACD,OAAOX,EAAEO,UAM7BL,EAAW,QAAIF,EACRG,OAAOU,OAAOX,GAGzB,IAOIY,EAoCAC,EA0BAC,EArEAC,EAA6BlB,EAAkBH,GAC/CsB,EAA6BnB,EAAkBF,GAC/CsB,EAA6BpB,EAAkBD,IAK/CgB,EACA,SAASA,OAIUM,KAAO,SAASC,EAA+BC,GAAK,OAAO,IAAKA,GAAKR,IAC5FA,EAAuBS,KAAqBN,EAAcO,kBAAkB,CAAEC,KAAMX,EAAwBY,UAAW,CAAC,CAAC,6BAA8BC,MAAO,EAAGC,KAAM,EAAGC,SAAU,SAASC,EAAgCC,EAAIC,GAChN,EAALD,IACAd,EAAcgB,eAAe,EAAG,YAChChB,EAAcgB,eAAe,EAAG,iBAChChB,EAAciB,OAAO,EAAG,UACxBjB,EAAckB,eACdlB,EAAcmB,UAAU,EAAG,eAC3BnB,EAAcgB,eAAe,EAAG,iBAChChB,EAAciB,OAAO,EAAG,UACxBjB,EAAckB,eACdlB,EAAcmB,UAAU,EAAG,eAC3BnB,EAAcgB,eAAe,EAAG,iBAChChB,EAAciB,OAAO,EAAG,UACxBjB,EAAckB,eACdlB,EAAckB,iBAEnBE,WAAY,CAAClB,EAAcmB,QAASnB,EAAcoB,YAAarB,EAAcsB,YAAaC,cAAe,KAc5G1B,EACA,SAASA,OAISK,KAAO,SAASsB,EAA8BpB,GAAK,OAAO,IAAKA,GAAKP,IAC1FA,EAAsBQ,KAAqBN,EAAcO,kBAAkB,CAAEC,KAAMV,EAAuBW,UAAW,CAAC,CAAC,4BAA6BC,MAAO,EAAGC,KAAM,EAAGe,OAAQ,CAAC,CAAC,QAAS,GAAI,WAAY,KAAMd,SAAU,SAASe,EAA+Bb,EAAIC,GACrP,EAALD,IACAd,EAAcmB,UAAU,EAAG,eAC3BnB,EAAcmB,UAAU,EAAG,cAAe,KAE/CC,WAAY,CAACnB,EAAcsB,YAAaC,cAAe,KAe1DzB,EACA,SAASA,OAISI,KAAO,SAASyB,EAA8BvB,GAAK,OAAO,IAAKA,GAAKN,IAC1FA,EAAsB8B,KAAqB7B,EAAc8B,iBAAiB,CAAEtB,KAAMT,IAClFA,EAAsBgC,KAAqB/B,EAAcgC,iBAAiB,CAAEC,QAAS,CAAC,CAC1ErD,EAAGsD,iBACHrD,EAAGsD,mBAiBW,oBAAdC,WAA6BA,YAAcpC,EAAcqC,mBAAmBtC,EAAuB,CAAEuC,aAAc,CAACxC,EACpHD,GAAyBoC,QAAS,CAACrD,EAAGsD,iBACtCrD,EAAGsD,eAAgBtE,QAAS,CAACiC,EAC7BD,KAOZhC,EAAQkC,sBAAwBA,EAChClC,EAAQiC,sBAAwBA,EAChCjC,EAAQgC,uBAAyBA,EAEjCX,OAAOO,eAAe5B,EAAS,aAAc,CAAE0E,OAAO","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/material/divider'), require('@angular/material/list')) :\n    typeof define === 'function' && define.amd ? define('@angular/components-examples/material/divider', ['exports', '@angular/core', '@angular/material/divider', '@angular/material/list'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.ng = global.ng || {}, global.ng.componentsExamples = global.ng.componentsExamples || {}, global.ng.componentsExamples.material = global.ng.componentsExamples.material || {}, global.ng.componentsExamples.material.divider = {}), global.ng.core, global.ng.material.divider, global.ng.material.list));\n}(this, (function (exports, i0, i2, i1) { 'use strict';\n\n    function _interopNamespace(e) {\n        if (e && e.__esModule) return e;\n        var n = Object.create(null);\n        if (e) {\n            Object.keys(e).forEach(function (k) {\n                if (k !== 'default') {\n                    var d = Object.getOwnPropertyDescriptor(e, k);\n                    Object.defineProperty(n, k, d.get ? d : {\n                        enumerable: true,\n                        get: function () {\n                            return e[k];\n                        }\n                    });\n                }\n            });\n        }\n        n['default'] = e;\n        return Object.freeze(n);\n    }\n\n    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);\n    var i2__namespace = /*#__PURE__*/_interopNamespace(i2);\n    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);\n\n    /**\n     * @title Basic divider\n     */\n    var DividerOverviewExample = /** @class */ (function () {\n        function DividerOverviewExample() {\n        }\n        return DividerOverviewExample;\n    }());\n    DividerOverviewExample.ɵfac = function DividerOverviewExample_Factory(t) { return new (t || DividerOverviewExample)(); };\n    DividerOverviewExample.ɵcmp = /*@__PURE__*/ i0__namespace.ɵɵdefineComponent({ type: DividerOverviewExample, selectors: [[\"divider-overview-example\"]], decls: 9, vars: 0, template: function DividerOverviewExample_Template(rf, ctx) {\n            if (rf & 1) {\n                i0__namespace.ɵɵelementStart(0, \"mat-list\");\n                i0__namespace.ɵɵelementStart(1, \"mat-list-item\");\n                i0__namespace.ɵɵtext(2, \"Item 1\");\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelement(3, \"mat-divider\");\n                i0__namespace.ɵɵelementStart(4, \"mat-list-item\");\n                i0__namespace.ɵɵtext(5, \"Item 2\");\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelement(6, \"mat-divider\");\n                i0__namespace.ɵɵelementStart(7, \"mat-list-item\");\n                i0__namespace.ɵɵtext(8, \"Item 3\");\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelementEnd();\n            }\n        }, directives: [i1__namespace.MatList, i1__namespace.MatListItem, i2__namespace.MatDivider], encapsulation: 2 });\n    (function () {\n        (typeof ngDevMode === \"undefined\" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DividerOverviewExample, [{\n                type: i0.Component,\n                args: [{\n                        selector: 'divider-overview-example',\n                        templateUrl: 'divider-overview-example.html',\n                    }]\n            }], null, null);\n    })();\n\n    /**\n     * @title Testing with MatDividerHarness\n     */\n    var DividerHarnessExample = /** @class */ (function () {\n        function DividerHarnessExample() {\n        }\n        return DividerHarnessExample;\n    }());\n    DividerHarnessExample.ɵfac = function DividerHarnessExample_Factory(t) { return new (t || DividerHarnessExample)(); };\n    DividerHarnessExample.ɵcmp = /*@__PURE__*/ i0__namespace.ɵɵdefineComponent({ type: DividerHarnessExample, selectors: [[\"divider-harness-example\"]], decls: 2, vars: 0, consts: [[\"inset\", \"\", \"vertical\", \"\"]], template: function DividerHarnessExample_Template(rf, ctx) {\n            if (rf & 1) {\n                i0__namespace.ɵɵelement(0, \"mat-divider\");\n                i0__namespace.ɵɵelement(1, \"mat-divider\", 0);\n            }\n        }, directives: [i2__namespace.MatDivider], encapsulation: 2 });\n    (function () {\n        (typeof ngDevMode === \"undefined\" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DividerHarnessExample, [{\n                type: i0.Component,\n                args: [{\n                        selector: 'divider-harness-example',\n                        templateUrl: 'divider-harness-example.html',\n                    }]\n            }], null, null);\n    })();\n\n    var EXAMPLES = [\n        DividerHarnessExample,\n        DividerOverviewExample,\n    ];\n    var DividerExamplesModule = /** @class */ (function () {\n        function DividerExamplesModule() {\n        }\n        return DividerExamplesModule;\n    }());\n    DividerExamplesModule.ɵfac = function DividerExamplesModule_Factory(t) { return new (t || DividerExamplesModule)(); };\n    DividerExamplesModule.ɵmod = /*@__PURE__*/ i0__namespace.ɵɵdefineNgModule({ type: DividerExamplesModule });\n    DividerExamplesModule.ɵinj = /*@__PURE__*/ i0__namespace.ɵɵdefineInjector({ imports: [[\n                i2.MatDividerModule,\n                i1.MatListModule,\n            ]] });\n    (function () {\n        (typeof ngDevMode === \"undefined\" || ngDevMode) && i0__namespace.ɵsetClassMetadata(DividerExamplesModule, [{\n                type: i0.NgModule,\n                args: [{\n                        imports: [\n                            i2.MatDividerModule,\n                            i1.MatListModule,\n                        ],\n                        declarations: EXAMPLES,\n                        exports: EXAMPLES,\n                        entryComponents: EXAMPLES,\n                    }]\n            }], null, null);\n    })();\n    (function () {\n        (typeof ngJitMode === \"undefined\" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(DividerExamplesModule, { declarations: [DividerHarnessExample,\n                DividerOverviewExample], imports: [i2.MatDividerModule,\n                i1.MatListModule], exports: [DividerHarnessExample,\n                DividerOverviewExample] });\n    })();\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.DividerExamplesModule = DividerExamplesModule;\n    exports.DividerHarnessExample = DividerHarnessExample;\n    exports.DividerOverviewExample = DividerOverviewExample;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=components-examples-material-divider.umd.js.map\n"]}