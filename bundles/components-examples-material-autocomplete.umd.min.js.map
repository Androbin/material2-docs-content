{"version":3,"sources":["src/components-examples/components-examples-material-autocomplete.umd.js"],"names":["global","factory","exports","module","require","define","amd","globalThis","self","ng","componentsExamples","material","autocomplete","common","core","forms","formField","input","slideToggle","rxjs","operators","this","i5","i0","i1","i4","i2","i3","i6$1","i6","_interopNamespace","e","__esModule","n","Object","create","keys","forEach","k","d","getOwnPropertyDescriptor","defineProperty","get","enumerable","freeze","i5__namespace","i0__namespace","i1__namespace","i4__namespace","i2__namespace","i3__namespace","i6__namespace$1","i6__namespace","AutocompleteAutoActiveFirstOptionExample_mat_option_7_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","option_r2","$implicit","ɵɵproperty","ɵɵadvance","ɵɵtextInterpolate1","AutocompleteAutoActiveFirstOptionExample","myControl","FormControl","options","prototype","ngOnInit","_this","filteredOptions","valueChanges","pipe","startWith","map","value","_filter","filterValue","toLowerCase","filter","option","indexOf","AutocompleteDisplayExample_mat_option_7_Template","name","ɵfac","AutocompleteAutoActiveFirstOptionExample_Factory","t","ɵcmp","ɵɵdefineComponent","type","selectors","decls","vars","consts","template","AutocompleteAutoActiveFirstOptionExample_Template","ɵɵelement","ɵɵtemplate","ɵɵpipe","_r0","ɵɵreference","ɵɵpipeBind1","directives","ɵangular_packages_forms_forms_ba","NgControlStatusGroup","NgForm","MatFormField","MatLabel","MatInput","DefaultValueAccessor","MatAutocompleteTrigger","NgControlStatus","FormControlDirective","MatAutocomplete","NgForOf","MatOption","pipes","AsyncPipe","styles","AutocompleteDisplayExample","slice","displayFn","user","AutocompleteFilterExample_mat_option_7_Template","AutocompleteDisplayExample_Factory","AutocompleteDisplayExample_Template","AutocompleteFilterExample","includes","AutocompleteOptgroupExample_mat_optgroup_7_mat_option_1_Template","name_r4","AutocompleteOptgroupExample_mat_optgroup_7_Template","group_r2","letter","names","AutocompleteFilterExample_Factory","AutocompleteFilterExample_Template","opt","item","AutocompleteOptgroupExample","_formBuilder","stateForm","group","stateGroup","stateGroups","stateGroupOptions","_filterGroup","length","AutocompleteOverviewExample_mat_option_7_Template","state_r2","flag","ɵɵsanitizeUrl","ɵɵtextInterpolate","population","AutocompleteOptgroupExample_Factory","ɵɵdirectiveInject","FormBuilder","AutocompleteOptgroupExample_Template","FormGroupDirective","FormControlName","RequiredValidator","MatOptgroup","encapsulation","AutocompleteOverviewExample","stateCtrl","states","filteredStates","state","_filterStates","AutocompletePlainInputExample_mat_option_4_Template","street_r2","AutocompleteOverviewExample_Factory","AutocompleteOverviewExample_Template","ɵɵlistener","AutocompleteOverviewExample_Template_mat_slide_toggle_change_10_listener","disabled","enable","disable","MatSlideToggle","AutocompleteSimpleExample","AutocompleteHarnessExample","AutocompleteExamplesModule","AutocompletePlainInputExample","control","streets","filteredStreets","_normalizeValue","street","replace","AutocompleteSimpleExample_mat_option_7_Template","AutocompleteHarnessExample_mat_option_2_Template","code","AutocompletePlainInputExample_Factory","AutocompletePlainInputExample_Template","AutocompleteSimpleExample_Factory","AutocompleteSimpleExample_Template","AutocompleteHarnessExample_Factory","AutocompleteHarnessExample_Template","AutocompleteExamplesModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","CommonModule","MatAutocompleteModule","MatFormFieldModule","MatInputModule","MatSlideToggleModule","FormsModule","ReactiveFormsModule","ngJitMode","ɵɵsetNgModuleScope","declarations"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('@angular/core'), require('@angular/forms'), require('@angular/material/autocomplete'), require('@angular/material/form-field'), require('@angular/material/input'), require('@angular/material/slide-toggle'), require('rxjs/operators'), require('@angular/material/core')) :\n    typeof define === 'function' && define.amd ? define('@angular/components-examples/material/autocomplete', ['exports', '@angular/common', '@angular/core', '@angular/forms', '@angular/material/autocomplete', '@angular/material/form-field', '@angular/material/input', '@angular/material/slide-toggle', 'rxjs/operators', '@angular/material/core'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.ng = global.ng || {}, global.ng.componentsExamples = global.ng.componentsExamples || {}, global.ng.componentsExamples.material = global.ng.componentsExamples.material || {}, global.ng.componentsExamples.material.autocomplete = {}), global.ng.common, global.ng.core, global.ng.forms, global.ng.material.autocomplete, global.ng.material.formField, global.ng.material.input, global.ng.material.slideToggle, global.rxjs.operators, global.ng.material.core));\n}(this, (function (exports, i5, i0, i1, i4, i2, i3, i6$1, operators, i6) { 'use strict';\n\n    function _interopNamespace(e) {\n        if (e && e.__esModule) return e;\n        var n = Object.create(null);\n        if (e) {\n            Object.keys(e).forEach(function (k) {\n                if (k !== 'default') {\n                    var d = Object.getOwnPropertyDescriptor(e, k);\n                    Object.defineProperty(n, k, d.get ? d : {\n                        enumerable: true,\n                        get: function () {\n                            return e[k];\n                        }\n                    });\n                }\n            });\n        }\n        n['default'] = e;\n        return Object.freeze(n);\n    }\n\n    var i5__namespace = /*#__PURE__*/_interopNamespace(i5);\n    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);\n    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);\n    var i4__namespace = /*#__PURE__*/_interopNamespace(i4);\n    var i2__namespace = /*#__PURE__*/_interopNamespace(i2);\n    var i3__namespace = /*#__PURE__*/_interopNamespace(i3);\n    var i6__namespace$1 = /*#__PURE__*/_interopNamespace(i6$1);\n    var i6__namespace = /*#__PURE__*/_interopNamespace(i6);\n\n    function AutocompleteAutoActiveFirstOptionExample_mat_option_7_Template(rf, ctx) {\n        if (rf & 1) {\n            i0__namespace.ɵɵelementStart(0, \"mat-option\", 6);\n            i0__namespace.ɵɵtext(1);\n            i0__namespace.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n            var option_r2 = ctx.$implicit;\n            i0__namespace.ɵɵproperty(\"value\", option_r2);\n            i0__namespace.ɵɵadvance(1);\n            i0__namespace.ɵɵtextInterpolate1(\" \", option_r2, \" \");\n        }\n    }\n    /**\n     * @title Highlight the first autocomplete option\n     */\n    var AutocompleteAutoActiveFirstOptionExample = /** @class */ (function () {\n        function AutocompleteAutoActiveFirstOptionExample() {\n            this.myControl = new i1.FormControl();\n            this.options = ['One', 'Two', 'Three'];\n        }\n        AutocompleteAutoActiveFirstOptionExample.prototype.ngOnInit = function () {\n            var _this = this;\n            this.filteredOptions = this.myControl.valueChanges.pipe(operators.startWith(''), operators.map(function (value) { return _this._filter(value); }));\n        };\n        AutocompleteAutoActiveFirstOptionExample.prototype._filter = function (value) {\n            var filterValue = value.toLowerCase();\n            return this.options.filter(function (option) { return option.toLowerCase().indexOf(filterValue) === 0; });\n        };\n        return AutocompleteAutoActiveFirstOptionExample;\n    }());\n    AutocompleteAutoActiveFirstOptionExample.ɵfac = function AutocompleteAutoActiveFirstOptionExample_Factory(t) { return new (t || AutocompleteAutoActiveFirstOptionExample)(); };\n    AutocompleteAutoActiveFirstOptionExample.ɵcmp = /*@__PURE__*/ i0__namespace.ɵɵdefineComponent({ type: AutocompleteAutoActiveFirstOptionExample, selectors: [[\"autocomplete-auto-active-first-option-example\"]], decls: 9, vars: 5, consts: [[1, \"example-form\"], [1, \"example-full-width\"], [\"type\", \"text\", \"placeholder\", \"Pick one\", \"aria-label\", \"Number\", \"matInput\", \"\", 3, \"formControl\", \"matAutocomplete\"], [\"autoActiveFirstOption\", \"\"], [\"auto\", \"matAutocomplete\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]], template: function AutocompleteAutoActiveFirstOptionExample_Template(rf, ctx) {\n            if (rf & 1) {\n                i0__namespace.ɵɵelementStart(0, \"form\", 0);\n                i0__namespace.ɵɵelementStart(1, \"mat-form-field\", 1);\n                i0__namespace.ɵɵelementStart(2, \"mat-label\");\n                i0__namespace.ɵɵtext(3, \"Number\");\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelement(4, \"input\", 2);\n                i0__namespace.ɵɵelementStart(5, \"mat-autocomplete\", 3, 4);\n                i0__namespace.ɵɵtemplate(7, AutocompleteAutoActiveFirstOptionExample_mat_option_7_Template, 2, 2, \"mat-option\", 5);\n                i0__namespace.ɵɵpipe(8, \"async\");\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelementEnd();\n            }\n            if (rf & 2) {\n                var _r0 = i0__namespace.ɵɵreference(6);\n                i0__namespace.ɵɵadvance(4);\n                i0__namespace.ɵɵproperty(\"formControl\", ctx.myControl)(\"matAutocomplete\", _r0);\n                i0__namespace.ɵɵadvance(3);\n                i0__namespace.ɵɵproperty(\"ngForOf\", i0__namespace.ɵɵpipeBind1(8, 3, ctx.filteredOptions));\n            }\n        }, directives: [i1__namespace.ɵangular_packages_forms_forms_ba, i1__namespace.NgControlStatusGroup, i1__namespace.NgForm, i2__namespace.MatFormField, i2__namespace.MatLabel, i3__namespace.MatInput, i1__namespace.DefaultValueAccessor, i4__namespace.MatAutocompleteTrigger, i1__namespace.NgControlStatus, i1__namespace.FormControlDirective, i4__namespace.MatAutocomplete, i5__namespace.NgForOf, i6__namespace.MatOption], pipes: [i5__namespace.AsyncPipe], styles: [\".example-form[_ngcontent-%COMP%] {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%;\\n}\\n\\n.example-full-width[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\"] });\n    (function () {\n        (typeof ngDevMode === \"undefined\" || ngDevMode) && i0__namespace.ɵsetClassMetadata(AutocompleteAutoActiveFirstOptionExample, [{\n                type: i0.Component,\n                args: [{\n                        selector: 'autocomplete-auto-active-first-option-example',\n                        templateUrl: 'autocomplete-auto-active-first-option-example.html',\n                        styleUrls: ['autocomplete-auto-active-first-option-example.css'],\n                    }]\n            }], null, null);\n    })();\n\n    function AutocompleteDisplayExample_mat_option_7_Template(rf, ctx) {\n        if (rf & 1) {\n            i0__namespace.ɵɵelementStart(0, \"mat-option\", 6);\n            i0__namespace.ɵɵtext(1);\n            i0__namespace.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n            var option_r2 = ctx.$implicit;\n            i0__namespace.ɵɵproperty(\"value\", option_r2);\n            i0__namespace.ɵɵadvance(1);\n            i0__namespace.ɵɵtextInterpolate1(\" \", option_r2.name, \" \");\n        }\n    }\n    /**\n     * @title Display value autocomplete\n     */\n    var AutocompleteDisplayExample = /** @class */ (function () {\n        function AutocompleteDisplayExample() {\n            this.myControl = new i1.FormControl();\n            this.options = [\n                { name: 'Mary' },\n                { name: 'Shelley' },\n                { name: 'Igor' }\n            ];\n        }\n        AutocompleteDisplayExample.prototype.ngOnInit = function () {\n            var _this = this;\n            this.filteredOptions = this.myControl.valueChanges\n                .pipe(operators.startWith(''), operators.map(function (value) { return typeof value === 'string' ? value : value.name; }), operators.map(function (name) { return name ? _this._filter(name) : _this.options.slice(); }));\n        };\n        AutocompleteDisplayExample.prototype.displayFn = function (user) {\n            return user && user.name ? user.name : '';\n        };\n        AutocompleteDisplayExample.prototype._filter = function (name) {\n            var filterValue = name.toLowerCase();\n            return this.options.filter(function (option) { return option.name.toLowerCase().indexOf(filterValue) === 0; });\n        };\n        return AutocompleteDisplayExample;\n    }());\n    AutocompleteDisplayExample.ɵfac = function AutocompleteDisplayExample_Factory(t) { return new (t || AutocompleteDisplayExample)(); };\n    AutocompleteDisplayExample.ɵcmp = /*@__PURE__*/ i0__namespace.ɵɵdefineComponent({ type: AutocompleteDisplayExample, selectors: [[\"autocomplete-display-example\"]], decls: 9, vars: 6, consts: [[1, \"example-form\"], [1, \"example-full-width\"], [\"type\", \"text\", \"matInput\", \"\", 3, \"formControl\", \"matAutocomplete\"], [3, \"displayWith\"], [\"auto\", \"matAutocomplete\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]], template: function AutocompleteDisplayExample_Template(rf, ctx) {\n            if (rf & 1) {\n                i0__namespace.ɵɵelementStart(0, \"form\", 0);\n                i0__namespace.ɵɵelementStart(1, \"mat-form-field\", 1);\n                i0__namespace.ɵɵelementStart(2, \"mat-label\");\n                i0__namespace.ɵɵtext(3, \"Assignee\");\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelement(4, \"input\", 2);\n                i0__namespace.ɵɵelementStart(5, \"mat-autocomplete\", 3, 4);\n                i0__namespace.ɵɵtemplate(7, AutocompleteDisplayExample_mat_option_7_Template, 2, 2, \"mat-option\", 5);\n                i0__namespace.ɵɵpipe(8, \"async\");\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelementEnd();\n            }\n            if (rf & 2) {\n                var _r0 = i0__namespace.ɵɵreference(6);\n                i0__namespace.ɵɵadvance(4);\n                i0__namespace.ɵɵproperty(\"formControl\", ctx.myControl)(\"matAutocomplete\", _r0);\n                i0__namespace.ɵɵadvance(1);\n                i0__namespace.ɵɵproperty(\"displayWith\", ctx.displayFn);\n                i0__namespace.ɵɵadvance(2);\n                i0__namespace.ɵɵproperty(\"ngForOf\", i0__namespace.ɵɵpipeBind1(8, 4, ctx.filteredOptions));\n            }\n        }, directives: [i1__namespace.ɵangular_packages_forms_forms_ba, i1__namespace.NgControlStatusGroup, i1__namespace.NgForm, i2__namespace.MatFormField, i2__namespace.MatLabel, i3__namespace.MatInput, i1__namespace.DefaultValueAccessor, i4__namespace.MatAutocompleteTrigger, i1__namespace.NgControlStatus, i1__namespace.FormControlDirective, i4__namespace.MatAutocomplete, i5__namespace.NgForOf, i6__namespace.MatOption], pipes: [i5__namespace.AsyncPipe], styles: [\".example-form[_ngcontent-%COMP%] {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%;\\n}\\n\\n.example-full-width[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\"] });\n    (function () {\n        (typeof ngDevMode === \"undefined\" || ngDevMode) && i0__namespace.ɵsetClassMetadata(AutocompleteDisplayExample, [{\n                type: i0.Component,\n                args: [{\n                        selector: 'autocomplete-display-example',\n                        templateUrl: 'autocomplete-display-example.html',\n                        styleUrls: ['autocomplete-display-example.css'],\n                    }]\n            }], null, null);\n    })();\n\n    function AutocompleteFilterExample_mat_option_7_Template(rf, ctx) {\n        if (rf & 1) {\n            i0__namespace.ɵɵelementStart(0, \"mat-option\", 5);\n            i0__namespace.ɵɵtext(1);\n            i0__namespace.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n            var option_r2 = ctx.$implicit;\n            i0__namespace.ɵɵproperty(\"value\", option_r2);\n            i0__namespace.ɵɵadvance(1);\n            i0__namespace.ɵɵtextInterpolate1(\" \", option_r2, \" \");\n        }\n    }\n    /**\n     * @title Filter autocomplete\n     */\n    var AutocompleteFilterExample = /** @class */ (function () {\n        function AutocompleteFilterExample() {\n            this.myControl = new i1.FormControl();\n            this.options = ['One', 'Two', 'Three'];\n        }\n        AutocompleteFilterExample.prototype.ngOnInit = function () {\n            var _this = this;\n            this.filteredOptions = this.myControl.valueChanges\n                .pipe(operators.startWith(''), operators.map(function (value) { return _this._filter(value); }));\n        };\n        AutocompleteFilterExample.prototype._filter = function (value) {\n            var filterValue = value.toLowerCase();\n            return this.options.filter(function (option) { return option.toLowerCase().includes(filterValue); });\n        };\n        return AutocompleteFilterExample;\n    }());\n    AutocompleteFilterExample.ɵfac = function AutocompleteFilterExample_Factory(t) { return new (t || AutocompleteFilterExample)(); };\n    AutocompleteFilterExample.ɵcmp = /*@__PURE__*/ i0__namespace.ɵɵdefineComponent({ type: AutocompleteFilterExample, selectors: [[\"autocomplete-filter-example\"]], decls: 9, vars: 5, consts: [[1, \"example-form\"], [1, \"example-full-width\"], [\"type\", \"text\", \"placeholder\", \"Pick one\", \"aria-label\", \"Number\", \"matInput\", \"\", 3, \"formControl\", \"matAutocomplete\"], [\"auto\", \"matAutocomplete\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]], template: function AutocompleteFilterExample_Template(rf, ctx) {\n            if (rf & 1) {\n                i0__namespace.ɵɵelementStart(0, \"form\", 0);\n                i0__namespace.ɵɵelementStart(1, \"mat-form-field\", 1);\n                i0__namespace.ɵɵelementStart(2, \"mat-label\");\n                i0__namespace.ɵɵtext(3, \"Number\");\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelement(4, \"input\", 2);\n                i0__namespace.ɵɵelementStart(5, \"mat-autocomplete\", null, 3);\n                i0__namespace.ɵɵtemplate(7, AutocompleteFilterExample_mat_option_7_Template, 2, 2, \"mat-option\", 4);\n                i0__namespace.ɵɵpipe(8, \"async\");\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelementEnd();\n            }\n            if (rf & 2) {\n                var _r0 = i0__namespace.ɵɵreference(6);\n                i0__namespace.ɵɵadvance(4);\n                i0__namespace.ɵɵproperty(\"formControl\", ctx.myControl)(\"matAutocomplete\", _r0);\n                i0__namespace.ɵɵadvance(3);\n                i0__namespace.ɵɵproperty(\"ngForOf\", i0__namespace.ɵɵpipeBind1(8, 3, ctx.filteredOptions));\n            }\n        }, directives: [i1__namespace.ɵangular_packages_forms_forms_ba, i1__namespace.NgControlStatusGroup, i1__namespace.NgForm, i2__namespace.MatFormField, i2__namespace.MatLabel, i3__namespace.MatInput, i1__namespace.DefaultValueAccessor, i4__namespace.MatAutocompleteTrigger, i1__namespace.NgControlStatus, i1__namespace.FormControlDirective, i4__namespace.MatAutocomplete, i5__namespace.NgForOf, i6__namespace.MatOption], pipes: [i5__namespace.AsyncPipe], styles: [\".example-form[_ngcontent-%COMP%] {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%;\\n}\\n\\n.example-full-width[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\"] });\n    (function () {\n        (typeof ngDevMode === \"undefined\" || ngDevMode) && i0__namespace.ɵsetClassMetadata(AutocompleteFilterExample, [{\n                type: i0.Component,\n                args: [{\n                        selector: 'autocomplete-filter-example',\n                        templateUrl: 'autocomplete-filter-example.html',\n                        styleUrls: ['autocomplete-filter-example.css'],\n                    }]\n            }], null, null);\n    })();\n\n    function AutocompleteOptgroupExample_mat_optgroup_7_mat_option_1_Template(rf, ctx) {\n        if (rf & 1) {\n            i0__namespace.ɵɵelementStart(0, \"mat-option\", 6);\n            i0__namespace.ɵɵtext(1);\n            i0__namespace.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n            var name_r4 = ctx.$implicit;\n            i0__namespace.ɵɵproperty(\"value\", name_r4);\n            i0__namespace.ɵɵadvance(1);\n            i0__namespace.ɵɵtextInterpolate1(\" \", name_r4, \" \");\n        }\n    }\n    function AutocompleteOptgroupExample_mat_optgroup_7_Template(rf, ctx) {\n        if (rf & 1) {\n            i0__namespace.ɵɵelementStart(0, \"mat-optgroup\", 4);\n            i0__namespace.ɵɵtemplate(1, AutocompleteOptgroupExample_mat_optgroup_7_mat_option_1_Template, 2, 2, \"mat-option\", 5);\n            i0__namespace.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n            var group_r2 = ctx.$implicit;\n            i0__namespace.ɵɵproperty(\"label\", group_r2.letter);\n            i0__namespace.ɵɵadvance(1);\n            i0__namespace.ɵɵproperty(\"ngForOf\", group_r2.names);\n        }\n    }\n    var _filter = function (opt, value) {\n        var filterValue = value.toLowerCase();\n        return opt.filter(function (item) { return item.toLowerCase().indexOf(filterValue) === 0; });\n    };\n    /**\n     * @title Option groups autocomplete\n     */\n    var AutocompleteOptgroupExample = /** @class */ (function () {\n        function AutocompleteOptgroupExample(_formBuilder) {\n            this._formBuilder = _formBuilder;\n            this.stateForm = this._formBuilder.group({\n                stateGroup: '',\n            });\n            this.stateGroups = [{\n                    letter: 'A',\n                    names: ['Alabama', 'Alaska', 'Arizona', 'Arkansas']\n                }, {\n                    letter: 'C',\n                    names: ['California', 'Colorado', 'Connecticut']\n                }, {\n                    letter: 'D',\n                    names: ['Delaware']\n                }, {\n                    letter: 'F',\n                    names: ['Florida']\n                }, {\n                    letter: 'G',\n                    names: ['Georgia']\n                }, {\n                    letter: 'H',\n                    names: ['Hawaii']\n                }, {\n                    letter: 'I',\n                    names: ['Idaho', 'Illinois', 'Indiana', 'Iowa']\n                }, {\n                    letter: 'K',\n                    names: ['Kansas', 'Kentucky']\n                }, {\n                    letter: 'L',\n                    names: ['Louisiana']\n                }, {\n                    letter: 'M',\n                    names: ['Maine', 'Maryland', 'Massachusetts', 'Michigan',\n                        'Minnesota', 'Mississippi', 'Missouri', 'Montana']\n                }, {\n                    letter: 'N',\n                    names: ['Nebraska', 'Nevada', 'New Hampshire', 'New Jersey',\n                        'New Mexico', 'New York', 'North Carolina', 'North Dakota']\n                }, {\n                    letter: 'O',\n                    names: ['Ohio', 'Oklahoma', 'Oregon']\n                }, {\n                    letter: 'P',\n                    names: ['Pennsylvania']\n                }, {\n                    letter: 'R',\n                    names: ['Rhode Island']\n                }, {\n                    letter: 'S',\n                    names: ['South Carolina', 'South Dakota']\n                }, {\n                    letter: 'T',\n                    names: ['Tennessee', 'Texas']\n                }, {\n                    letter: 'U',\n                    names: ['Utah']\n                }, {\n                    letter: 'V',\n                    names: ['Vermont', 'Virginia']\n                }, {\n                    letter: 'W',\n                    names: ['Washington', 'West Virginia', 'Wisconsin', 'Wyoming']\n                }];\n        }\n        AutocompleteOptgroupExample.prototype.ngOnInit = function () {\n            var _this = this;\n            this.stateGroupOptions = this.stateForm.get('stateGroup').valueChanges\n                .pipe(operators.startWith(''), operators.map(function (value) { return _this._filterGroup(value); }));\n        };\n        AutocompleteOptgroupExample.prototype._filterGroup = function (value) {\n            if (value) {\n                return this.stateGroups\n                    .map(function (group) { return ({ letter: group.letter, names: _filter(group.names, value) }); })\n                    .filter(function (group) { return group.names.length > 0; });\n            }\n            return this.stateGroups;\n        };\n        return AutocompleteOptgroupExample;\n    }());\n    AutocompleteOptgroupExample.ɵfac = function AutocompleteOptgroupExample_Factory(t) { return new (t || AutocompleteOptgroupExample)(i0__namespace.ɵɵdirectiveInject(i1__namespace.FormBuilder)); };\n    AutocompleteOptgroupExample.ɵcmp = /*@__PURE__*/ i0__namespace.ɵɵdefineComponent({ type: AutocompleteOptgroupExample, selectors: [[\"autocomplete-optgroup-example\"]], decls: 9, vars: 5, consts: [[3, \"formGroup\"], [\"type\", \"text\", \"matInput\", \"\", \"formControlName\", \"stateGroup\", \"required\", \"\", 3, \"matAutocomplete\"], [\"autoGroup\", \"matAutocomplete\"], [3, \"label\", 4, \"ngFor\", \"ngForOf\"], [3, \"label\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]], template: function AutocompleteOptgroupExample_Template(rf, ctx) {\n            if (rf & 1) {\n                i0__namespace.ɵɵelementStart(0, \"form\", 0);\n                i0__namespace.ɵɵelementStart(1, \"mat-form-field\");\n                i0__namespace.ɵɵelementStart(2, \"mat-label\");\n                i0__namespace.ɵɵtext(3, \"States Group\");\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelement(4, \"input\", 1);\n                i0__namespace.ɵɵelementStart(5, \"mat-autocomplete\", null, 2);\n                i0__namespace.ɵɵtemplate(7, AutocompleteOptgroupExample_mat_optgroup_7_Template, 2, 2, \"mat-optgroup\", 3);\n                i0__namespace.ɵɵpipe(8, \"async\");\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelementEnd();\n            }\n            if (rf & 2) {\n                var _r0 = i0__namespace.ɵɵreference(6);\n                i0__namespace.ɵɵproperty(\"formGroup\", ctx.stateForm);\n                i0__namespace.ɵɵadvance(4);\n                i0__namespace.ɵɵproperty(\"matAutocomplete\", _r0);\n                i0__namespace.ɵɵadvance(3);\n                i0__namespace.ɵɵproperty(\"ngForOf\", i0__namespace.ɵɵpipeBind1(8, 3, ctx.stateGroupOptions));\n            }\n        }, directives: [i1__namespace.ɵangular_packages_forms_forms_ba, i1__namespace.NgControlStatusGroup, i1__namespace.FormGroupDirective, i2__namespace.MatFormField, i2__namespace.MatLabel, i3__namespace.MatInput, i1__namespace.DefaultValueAccessor, i4__namespace.MatAutocompleteTrigger, i1__namespace.NgControlStatus, i1__namespace.FormControlName, i1__namespace.RequiredValidator, i4__namespace.MatAutocomplete, i5__namespace.NgForOf, i6__namespace.MatOptgroup, i6__namespace.MatOption], pipes: [i5__namespace.AsyncPipe], encapsulation: 2 });\n    (function () {\n        (typeof ngDevMode === \"undefined\" || ngDevMode) && i0__namespace.ɵsetClassMetadata(AutocompleteOptgroupExample, [{\n                type: i0.Component,\n                args: [{\n                        selector: 'autocomplete-optgroup-example',\n                        templateUrl: './autocomplete-optgroup-example.html',\n                    }]\n            }], function () { return [{ type: i1__namespace.FormBuilder }]; }, null);\n    })();\n\n    function AutocompleteOverviewExample_mat_option_7_Template(rf, ctx) {\n        if (rf & 1) {\n            i0__namespace.ɵɵelementStart(0, \"mat-option\", 6);\n            i0__namespace.ɵɵelement(1, \"img\", 7);\n            i0__namespace.ɵɵelementStart(2, \"span\");\n            i0__namespace.ɵɵtext(3);\n            i0__namespace.ɵɵelementEnd();\n            i0__namespace.ɵɵtext(4, \" | \");\n            i0__namespace.ɵɵelementStart(5, \"small\");\n            i0__namespace.ɵɵtext(6);\n            i0__namespace.ɵɵelementEnd();\n            i0__namespace.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n            var state_r2 = ctx.$implicit;\n            i0__namespace.ɵɵproperty(\"value\", state_r2.name);\n            i0__namespace.ɵɵadvance(1);\n            i0__namespace.ɵɵproperty(\"src\", state_r2.flag, i0__namespace.ɵɵsanitizeUrl);\n            i0__namespace.ɵɵadvance(2);\n            i0__namespace.ɵɵtextInterpolate(state_r2.name);\n            i0__namespace.ɵɵadvance(3);\n            i0__namespace.ɵɵtextInterpolate1(\"Population: \", state_r2.population, \"\");\n        }\n    }\n    /**\n     * @title Autocomplete overview\n     */\n    var AutocompleteOverviewExample = /** @class */ (function () {\n        function AutocompleteOverviewExample() {\n            var _this = this;\n            this.stateCtrl = new i1.FormControl();\n            this.states = [\n                {\n                    name: 'Arkansas',\n                    population: '2.978M',\n                    // https://commons.wikimedia.org/wiki/File:Flag_of_Arkansas.svg\n                    flag: 'https://upload.wikimedia.org/wikipedia/commons/9/9d/Flag_of_Arkansas.svg'\n                },\n                {\n                    name: 'California',\n                    population: '39.14M',\n                    // https://commons.wikimedia.org/wiki/File:Flag_of_California.svg\n                    flag: 'https://upload.wikimedia.org/wikipedia/commons/0/01/Flag_of_California.svg'\n                },\n                {\n                    name: 'Florida',\n                    population: '20.27M',\n                    // https://commons.wikimedia.org/wiki/File:Flag_of_Florida.svg\n                    flag: 'https://upload.wikimedia.org/wikipedia/commons/f/f7/Flag_of_Florida.svg'\n                },\n                {\n                    name: 'Texas',\n                    population: '27.47M',\n                    // https://commons.wikimedia.org/wiki/File:Flag_of_Texas.svg\n                    flag: 'https://upload.wikimedia.org/wikipedia/commons/f/f7/Flag_of_Texas.svg'\n                }\n            ];\n            this.filteredStates = this.stateCtrl.valueChanges\n                .pipe(operators.startWith(''), operators.map(function (state) { return state ? _this._filterStates(state) : _this.states.slice(); }));\n        }\n        AutocompleteOverviewExample.prototype._filterStates = function (value) {\n            var filterValue = value.toLowerCase();\n            return this.states.filter(function (state) { return state.name.toLowerCase().indexOf(filterValue) === 0; });\n        };\n        return AutocompleteOverviewExample;\n    }());\n    AutocompleteOverviewExample.ɵfac = function AutocompleteOverviewExample_Factory(t) { return new (t || AutocompleteOverviewExample)(); };\n    AutocompleteOverviewExample.ɵcmp = /*@__PURE__*/ i0__namespace.ɵɵdefineComponent({ type: AutocompleteOverviewExample, selectors: [[\"autocomplete-overview-example\"]], decls: 12, vars: 6, consts: [[1, \"example-form\"], [1, \"example-full-width\"], [\"matInput\", \"\", \"aria-label\", \"State\", 3, \"matAutocomplete\", \"formControl\"], [\"auto\", \"matAutocomplete\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"checked\", \"change\"], [3, \"value\"], [\"aria-hidden\", \"\", \"height\", \"25\", 1, \"example-option-img\", 3, \"src\"]], template: function AutocompleteOverviewExample_Template(rf, ctx) {\n            if (rf & 1) {\n                i0__namespace.ɵɵelementStart(0, \"form\", 0);\n                i0__namespace.ɵɵelementStart(1, \"mat-form-field\", 1);\n                i0__namespace.ɵɵelementStart(2, \"mat-label\");\n                i0__namespace.ɵɵtext(3, \"State\");\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelement(4, \"input\", 2);\n                i0__namespace.ɵɵelementStart(5, \"mat-autocomplete\", null, 3);\n                i0__namespace.ɵɵtemplate(7, AutocompleteOverviewExample_mat_option_7_Template, 7, 4, \"mat-option\", 4);\n                i0__namespace.ɵɵpipe(8, \"async\");\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelement(9, \"br\");\n                i0__namespace.ɵɵelementStart(10, \"mat-slide-toggle\", 5);\n                i0__namespace.ɵɵlistener(\"change\", function AutocompleteOverviewExample_Template_mat_slide_toggle_change_10_listener() { return ctx.stateCtrl.disabled ? ctx.stateCtrl.enable() : ctx.stateCtrl.disable(); });\n                i0__namespace.ɵɵtext(11, \" Disable Input? \");\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelementEnd();\n            }\n            if (rf & 2) {\n                var _r0 = i0__namespace.ɵɵreference(6);\n                i0__namespace.ɵɵadvance(4);\n                i0__namespace.ɵɵproperty(\"matAutocomplete\", _r0)(\"formControl\", ctx.stateCtrl);\n                i0__namespace.ɵɵadvance(3);\n                i0__namespace.ɵɵproperty(\"ngForOf\", i0__namespace.ɵɵpipeBind1(8, 4, ctx.filteredStates));\n                i0__namespace.ɵɵadvance(3);\n                i0__namespace.ɵɵproperty(\"checked\", ctx.stateCtrl.disabled);\n            }\n        }, directives: [i1__namespace.ɵangular_packages_forms_forms_ba, i1__namespace.NgControlStatusGroup, i1__namespace.NgForm, i2__namespace.MatFormField, i2__namespace.MatLabel, i3__namespace.MatInput, i4__namespace.MatAutocompleteTrigger, i1__namespace.DefaultValueAccessor, i1__namespace.NgControlStatus, i1__namespace.FormControlDirective, i4__namespace.MatAutocomplete, i5__namespace.NgForOf, i6__namespace$1.MatSlideToggle, i6__namespace.MatOption], pipes: [i5__namespace.AsyncPipe], styles: [\".example-form[_ngcontent-%COMP%] {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%;\\n}\\n\\n.example-full-width[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n\\n.example-option-img[_ngcontent-%COMP%] {\\n  vertical-align: middle;\\n  margin-right: 8px;\\n}\\n\\n[dir='rtl'][_ngcontent-%COMP%]   .example-option-img[_ngcontent-%COMP%] {\\n  margin-right: 0;\\n  margin-left: 8px;\\n}\"] });\n    (function () {\n        (typeof ngDevMode === \"undefined\" || ngDevMode) && i0__namespace.ɵsetClassMetadata(AutocompleteOverviewExample, [{\n                type: i0.Component,\n                args: [{\n                        selector: 'autocomplete-overview-example',\n                        templateUrl: 'autocomplete-overview-example.html',\n                        styleUrls: ['autocomplete-overview-example.css'],\n                    }]\n            }], function () { return []; }, null);\n    })();\n\n    function AutocompletePlainInputExample_mat_option_4_Template(rf, ctx) {\n        if (rf & 1) {\n            i0__namespace.ɵɵelementStart(0, \"mat-option\", 4);\n            i0__namespace.ɵɵtext(1);\n            i0__namespace.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n            var street_r2 = ctx.$implicit;\n            i0__namespace.ɵɵproperty(\"value\", street_r2);\n            i0__namespace.ɵɵadvance(1);\n            i0__namespace.ɵɵtextInterpolate1(\" \", street_r2, \" \");\n        }\n    }\n    /**\n     * @title Plain input autocomplete\n     */\n    var AutocompletePlainInputExample = /** @class */ (function () {\n        function AutocompletePlainInputExample() {\n            this.control = new i1.FormControl();\n            this.streets = ['Champs-Élysées', 'Lombard Street', 'Abbey Road', 'Fifth Avenue'];\n        }\n        AutocompletePlainInputExample.prototype.ngOnInit = function () {\n            var _this = this;\n            this.filteredStreets = this.control.valueChanges.pipe(operators.startWith(''), operators.map(function (value) { return _this._filter(value); }));\n        };\n        AutocompletePlainInputExample.prototype._filter = function (value) {\n            var _this = this;\n            var filterValue = this._normalizeValue(value);\n            return this.streets.filter(function (street) { return _this._normalizeValue(street).includes(filterValue); });\n        };\n        AutocompletePlainInputExample.prototype._normalizeValue = function (value) {\n            return value.toLowerCase().replace(/\\s/g, '');\n        };\n        return AutocompletePlainInputExample;\n    }());\n    AutocompletePlainInputExample.ɵfac = function AutocompletePlainInputExample_Factory(t) { return new (t || AutocompletePlainInputExample)(); };\n    AutocompletePlainInputExample.ɵcmp = /*@__PURE__*/ i0__namespace.ɵɵdefineComponent({ type: AutocompletePlainInputExample, selectors: [[\"autocomplete-plain-input-example\"]], decls: 6, vars: 5, consts: [[1, \"example-form\"], [\"type\", \"text\", \"placeholder\", \"Search for a street\", 3, \"formControl\", \"matAutocomplete\"], [\"auto\", \"matAutocomplete\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]], template: function AutocompletePlainInputExample_Template(rf, ctx) {\n            if (rf & 1) {\n                i0__namespace.ɵɵelementStart(0, \"form\", 0);\n                i0__namespace.ɵɵelement(1, \"input\", 1);\n                i0__namespace.ɵɵelementStart(2, \"mat-autocomplete\", null, 2);\n                i0__namespace.ɵɵtemplate(4, AutocompletePlainInputExample_mat_option_4_Template, 2, 2, \"mat-option\", 3);\n                i0__namespace.ɵɵpipe(5, \"async\");\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelementEnd();\n            }\n            if (rf & 2) {\n                var _r0 = i0__namespace.ɵɵreference(3);\n                i0__namespace.ɵɵadvance(1);\n                i0__namespace.ɵɵproperty(\"formControl\", ctx.control)(\"matAutocomplete\", _r0);\n                i0__namespace.ɵɵadvance(3);\n                i0__namespace.ɵɵproperty(\"ngForOf\", i0__namespace.ɵɵpipeBind1(5, 3, ctx.filteredStreets));\n            }\n        }, directives: [i1__namespace.ɵangular_packages_forms_forms_ba, i1__namespace.NgControlStatusGroup, i1__namespace.NgForm, i1__namespace.DefaultValueAccessor, i4__namespace.MatAutocompleteTrigger, i1__namespace.NgControlStatus, i1__namespace.FormControlDirective, i4__namespace.MatAutocomplete, i5__namespace.NgForOf, i6__namespace.MatOption], pipes: [i5__namespace.AsyncPipe], styles: [\".example-form[_ngcontent-%COMP%] {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%;\\n}\\n\\n.example-full-width[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\"] });\n    (function () {\n        (typeof ngDevMode === \"undefined\" || ngDevMode) && i0__namespace.ɵsetClassMetadata(AutocompletePlainInputExample, [{\n                type: i0.Component,\n                args: [{\n                        selector: 'autocomplete-plain-input-example',\n                        templateUrl: 'autocomplete-plain-input-example.html',\n                        styleUrls: ['autocomplete-plain-input-example.css'],\n                    }]\n            }], null, null);\n    })();\n\n    function AutocompleteSimpleExample_mat_option_7_Template(rf, ctx) {\n        if (rf & 1) {\n            i0__namespace.ɵɵelementStart(0, \"mat-option\", 5);\n            i0__namespace.ɵɵtext(1);\n            i0__namespace.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n            var option_r2 = ctx.$implicit;\n            i0__namespace.ɵɵproperty(\"value\", option_r2);\n            i0__namespace.ɵɵadvance(1);\n            i0__namespace.ɵɵtextInterpolate1(\" \", option_r2, \" \");\n        }\n    }\n    /**\n     * @title Simple autocomplete\n     */\n    var AutocompleteSimpleExample = /** @class */ (function () {\n        function AutocompleteSimpleExample() {\n            this.myControl = new i1.FormControl();\n            this.options = ['One', 'Two', 'Three'];\n        }\n        return AutocompleteSimpleExample;\n    }());\n    AutocompleteSimpleExample.ɵfac = function AutocompleteSimpleExample_Factory(t) { return new (t || AutocompleteSimpleExample)(); };\n    AutocompleteSimpleExample.ɵcmp = /*@__PURE__*/ i0__namespace.ɵɵdefineComponent({ type: AutocompleteSimpleExample, selectors: [[\"autocomplete-simple-example\"]], decls: 8, vars: 3, consts: [[1, \"example-form\"], [1, \"example-full-width\"], [\"type\", \"text\", \"placeholder\", \"Pick one\", \"aria-label\", \"Number\", \"matInput\", \"\", 3, \"formControl\", \"matAutocomplete\"], [\"auto\", \"matAutocomplete\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]], template: function AutocompleteSimpleExample_Template(rf, ctx) {\n            if (rf & 1) {\n                i0__namespace.ɵɵelementStart(0, \"form\", 0);\n                i0__namespace.ɵɵelementStart(1, \"mat-form-field\", 1);\n                i0__namespace.ɵɵelementStart(2, \"mat-label\");\n                i0__namespace.ɵɵtext(3, \"Number\");\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelement(4, \"input\", 2);\n                i0__namespace.ɵɵelementStart(5, \"mat-autocomplete\", null, 3);\n                i0__namespace.ɵɵtemplate(7, AutocompleteSimpleExample_mat_option_7_Template, 2, 2, \"mat-option\", 4);\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelementEnd();\n            }\n            if (rf & 2) {\n                var _r0 = i0__namespace.ɵɵreference(6);\n                i0__namespace.ɵɵadvance(4);\n                i0__namespace.ɵɵproperty(\"formControl\", ctx.myControl)(\"matAutocomplete\", _r0);\n                i0__namespace.ɵɵadvance(3);\n                i0__namespace.ɵɵproperty(\"ngForOf\", ctx.options);\n            }\n        }, directives: [i1__namespace.ɵangular_packages_forms_forms_ba, i1__namespace.NgControlStatusGroup, i1__namespace.NgForm, i2__namespace.MatFormField, i2__namespace.MatLabel, i3__namespace.MatInput, i1__namespace.DefaultValueAccessor, i4__namespace.MatAutocompleteTrigger, i1__namespace.NgControlStatus, i1__namespace.FormControlDirective, i4__namespace.MatAutocomplete, i5__namespace.NgForOf, i6__namespace.MatOption], styles: [\".example-form[_ngcontent-%COMP%] {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%;\\n}\\n\\n.example-full-width[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\"] });\n    (function () {\n        (typeof ngDevMode === \"undefined\" || ngDevMode) && i0__namespace.ɵsetClassMetadata(AutocompleteSimpleExample, [{\n                type: i0.Component,\n                args: [{\n                        selector: 'autocomplete-simple-example',\n                        templateUrl: 'autocomplete-simple-example.html',\n                        styleUrls: ['autocomplete-simple-example.css'],\n                    }]\n            }], null, null);\n    })();\n\n    function AutocompleteHarnessExample_mat_option_2_Template(rf, ctx) {\n        if (rf & 1) {\n            i0__namespace.ɵɵelementStart(0, \"mat-option\", 4);\n            i0__namespace.ɵɵtext(1);\n            i0__namespace.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n            var state_r2 = ctx.$implicit;\n            i0__namespace.ɵɵproperty(\"value\", state_r2.code);\n            i0__namespace.ɵɵadvance(1);\n            i0__namespace.ɵɵtextInterpolate(state_r2.name);\n        }\n    }\n    /**\n     * @title Testing with MatAutocompleteHarness\n     */\n    var AutocompleteHarnessExample = /** @class */ (function () {\n        function AutocompleteHarnessExample() {\n            this.states = [\n                { code: 'AL', name: 'Alabama' },\n                { code: 'CA', name: 'California' },\n                { code: 'FL', name: 'Florida' },\n                { code: 'KS', name: 'Kansas' },\n                { code: 'MA', name: 'Massachusetts' },\n                { code: 'NY', name: 'New York' },\n                { code: 'OR', name: 'Oregon' },\n                { code: 'PA', name: 'Pennsylvania' },\n                { code: 'TN', name: 'Tennessee' },\n                { code: 'VA', name: 'Virginia' },\n                { code: 'WY', name: 'Wyoming' },\n            ];\n        }\n        return AutocompleteHarnessExample;\n    }());\n    AutocompleteHarnessExample.ɵfac = function AutocompleteHarnessExample_Factory(t) { return new (t || AutocompleteHarnessExample)(); };\n    AutocompleteHarnessExample.ɵcmp = /*@__PURE__*/ i0__namespace.ɵɵdefineComponent({ type: AutocompleteHarnessExample, selectors: [[\"autocomplete-harness-example\"]], decls: 5, vars: 3, consts: [[\"autocomplete\", \"matAutocomplete\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"plain\", 3, \"matAutocomplete\"], [\"id\", \"disabled\", \"disabled\", \"\", 3, \"matAutocomplete\"], [3, \"value\"]], template: function AutocompleteHarnessExample_Template(rf, ctx) {\n            if (rf & 1) {\n                i0__namespace.ɵɵelementStart(0, \"mat-autocomplete\", null, 0);\n                i0__namespace.ɵɵtemplate(2, AutocompleteHarnessExample_mat_option_2_Template, 2, 2, \"mat-option\", 1);\n                i0__namespace.ɵɵelementEnd();\n                i0__namespace.ɵɵelement(3, \"input\", 2);\n                i0__namespace.ɵɵelement(4, \"input\", 3);\n            }\n            if (rf & 2) {\n                var _r0 = i0__namespace.ɵɵreference(1);\n                i0__namespace.ɵɵadvance(2);\n                i0__namespace.ɵɵproperty(\"ngForOf\", ctx.states);\n                i0__namespace.ɵɵadvance(1);\n                i0__namespace.ɵɵproperty(\"matAutocomplete\", _r0);\n                i0__namespace.ɵɵadvance(1);\n                i0__namespace.ɵɵproperty(\"matAutocomplete\", _r0);\n            }\n        }, directives: [i4__namespace.MatAutocomplete, i5__namespace.NgForOf, i4__namespace.MatAutocompleteTrigger, i6__namespace.MatOption], encapsulation: 2 });\n    (function () {\n        (typeof ngDevMode === \"undefined\" || ngDevMode) && i0__namespace.ɵsetClassMetadata(AutocompleteHarnessExample, [{\n                type: i0.Component,\n                args: [{\n                        selector: 'autocomplete-harness-example',\n                        templateUrl: 'autocomplete-harness-example.html'\n                    }]\n            }], null, null);\n    })();\n\n    var EXAMPLES = [\n        AutocompleteAutoActiveFirstOptionExample,\n        AutocompleteDisplayExample,\n        AutocompleteFilterExample,\n        AutocompleteHarnessExample,\n        AutocompleteOptgroupExample,\n        AutocompleteOverviewExample,\n        AutocompletePlainInputExample,\n        AutocompleteSimpleExample,\n    ];\n    var AutocompleteExamplesModule = /** @class */ (function () {\n        function AutocompleteExamplesModule() {\n        }\n        return AutocompleteExamplesModule;\n    }());\n    AutocompleteExamplesModule.ɵfac = function AutocompleteExamplesModule_Factory(t) { return new (t || AutocompleteExamplesModule)(); };\n    AutocompleteExamplesModule.ɵmod = /*@__PURE__*/ i0__namespace.ɵɵdefineNgModule({ type: AutocompleteExamplesModule });\n    AutocompleteExamplesModule.ɵinj = /*@__PURE__*/ i0__namespace.ɵɵdefineInjector({ imports: [[\n                i5.CommonModule,\n                i4.MatAutocompleteModule,\n                i2.MatFormFieldModule,\n                i3.MatInputModule,\n                i6$1.MatSlideToggleModule,\n                i1.FormsModule,\n                i1.ReactiveFormsModule,\n            ]] });\n    (function () {\n        (typeof ngDevMode === \"undefined\" || ngDevMode) && i0__namespace.ɵsetClassMetadata(AutocompleteExamplesModule, [{\n                type: i0.NgModule,\n                args: [{\n                        imports: [\n                            i5.CommonModule,\n                            i4.MatAutocompleteModule,\n                            i2.MatFormFieldModule,\n                            i3.MatInputModule,\n                            i6$1.MatSlideToggleModule,\n                            i1.FormsModule,\n                            i1.ReactiveFormsModule,\n                        ],\n                        declarations: EXAMPLES,\n                        exports: EXAMPLES,\n                        entryComponents: EXAMPLES,\n                    }]\n            }], null, null);\n    })();\n    (function () {\n        (typeof ngJitMode === \"undefined\" || ngJitMode) && i0__namespace.ɵɵsetNgModuleScope(AutocompleteExamplesModule, { declarations: [AutocompleteAutoActiveFirstOptionExample,\n                AutocompleteDisplayExample,\n                AutocompleteFilterExample,\n                AutocompleteHarnessExample,\n                AutocompleteOptgroupExample,\n                AutocompleteOverviewExample,\n                AutocompletePlainInputExample,\n                AutocompleteSimpleExample], imports: [i5.CommonModule,\n                i4.MatAutocompleteModule,\n                i2.MatFormFieldModule,\n                i3.MatInputModule,\n                i6$1.MatSlideToggleModule,\n                i1.FormsModule,\n                i1.ReactiveFormsModule], exports: [AutocompleteAutoActiveFirstOptionExample,\n                AutocompleteDisplayExample,\n                AutocompleteFilterExample,\n                AutocompleteHarnessExample,\n                AutocompleteOptgroupExample,\n                AutocompleteOverviewExample,\n                AutocompletePlainInputExample,\n                AutocompleteSimpleExample] });\n    })();\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.AutocompleteAutoActiveFirstOptionExample = AutocompleteAutoActiveFirstOptionExample;\n    exports.AutocompleteDisplayExample = AutocompleteDisplayExample;\n    exports.AutocompleteExamplesModule = AutocompleteExamplesModule;\n    exports.AutocompleteFilterExample = AutocompleteFilterExample;\n    exports.AutocompleteHarnessExample = AutocompleteHarnessExample;\n    exports.AutocompleteOptgroupExample = AutocompleteOptgroupExample;\n    exports.AutocompleteOverviewExample = AutocompleteOverviewExample;\n    exports.AutocompletePlainInputExample = AutocompletePlainInputExample;\n    exports.AutocompleteSimpleExample = AutocompleteSimpleExample;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=components-examples-material-autocomplete.umd.js.map\n"]}